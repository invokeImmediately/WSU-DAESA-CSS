/*  ┌────────────────────────────────────────────────────────────────────────────────────────────┐
**  │ FILENAME: utility-classes.less                                                             │
**  │                                                                                            │
**  │ AUTHOR: Daniel Rieck <daniel.rieck@wsu.edu> (https://github.com/invokeImmediately)         │
**  │                                                                                            │
**  │ DESCRIPTION: Less import that declares a variety of utility classes for use in functional  │
**  │  styling of WSU Office of Undergraduate Education websites. Designed to be imported        │
**  │  downstream of other Less files in the final stylesheet build so its rules will have the   │
**  │  greatest possible weight in style conflict resolution.                                    │
**  └────────────────────────────────────────────────────────────────────────────────────────────┘
*/

/*  ================================================================================================
**  OUE UTILITY CLASSES
*/

/*    ──────────────────────────────────────────────────────────────────────────────────────────────
**    TABLE OF CONTENTS:
**    ───────────────────────────────────────────────────────────────────────────────────────────
**    §1: Widths...............................................................................51
**        >>> §1.1: Percent widths.............................................................55
**        >>> §1.2: Max widths.................................................................96
**    §2: Typography..........................................................................108
**        >>> §2.1: Font Sizing...............................................................112
**        >>> §2.2: Line Heights..............................................................176
**        >>> §2.3: Bolding...................................................................224
**        >>> §2.4: Text transformation.......................................................254
**        >>> §2.5: Text alignment............................................................268
**    §3: Spacing.............................................................................292
**    §4: Floating............................................................................312
**        >>> §4.1: Clearing..................................................................331
**    §5: Display.............................................................................351
**        >>> §5.1: Flex-box..................................................................390
**    §6: Margins.............................................................................430
**    §7: Padding.............................................................................476
**      >>> §7.1: In units of "em"............................................................480
**      >>> §7.2: In units of "rem"...........................................................519
**    §8: Colors..............................................................................554
**        >>> §8.1: WSU Grays.................................................................599
**        >>> §8.2: WSU Crimsons..............................................................608
**        >>> §8.3: WSU Greens................................................................618
**        >>> §8.4: WSU Yellows...............................................................628
**        >>> §8.5: WSU Blues.................................................................638
**        >>> §8.6: WSU Oranges...............................................................648
**    ──────────────────────────────────────────────────────────────────────────────────────────────
*/

@oue-utility-classes-ruleset: {

/*    ----------------------------------------------------------------------------------------------
**    §1: Widths
*/

/*      ····························································································
**      >>> §1.1: Percent widths
*/
	@pct-width-1--class: ~"5pct";
	@pct-width-2--class: ~"10pct";
	@pct-width-3--class: ~"15pct";
	@pct-width-4--class: ~"20pct";
	@pct-width-5--class: ~"25pct";
	@pct-width-6--class: ~"30pct";
	@pct-width-7--class: ~"35pct";
	@pct-width-8--class: ~"40pct";
	@pct-width-9--class: ~"45pct";
	@pct-width-10--class: ~"50pct";
	@pct-width-11--class: ~"55pct";
	@pct-width-12--class: ~"60pct";
	@pct-width-13--class: ~"65pct";
	@pct-width-14--class: ~"70pct";
	@pct-width-15--class: ~"75pct";
	@pct-width-16--class: ~"80pct";
	@pct-width-17--class: ~"85pct";
	@pct-width-18--class: ~"90pct";
	@pct-width-19--class: ~"95pct";
	@pct-width-20--class: ~"100pct";

	@pct-width--class-array: @pct-width-1--class, @pct-width-2--class, @pct-width-3--class,
		@pct-width-4--class, @pct-width-5--class, @pct-width-6--class, @pct-width-7--class,
		@pct-width-8--class, @pct-width-9--class, @pct-width-10--class, @pct-width-11--class,
		@pct-width-12--class, @pct-width-13--class, @pct-width-14--class, @pct-width-15--class,
		@pct-width-16--class, @pct-width-17--class, @pct-width-18--class, @pct-width-19--class,
		@pct-width-20--class;

	.pct-width-loop(@idx) when (@idx > 0) and (@idx <= length(@pct-width-array)) {
		.pct-width-loop((@idx - 1));
		@class-name: extract(@pct-width--class-array, @idx);
		.width--@{class-name},
		.w--@{class-name} {
			.width--pct(@idx);
		}
	}
	.pct-width-loop(length(@pct-width-array));

/*      ····························································································
**      >>> §1.2: Max widths
*/
	.max-width--none,
	.mw--none {
		max-width: none;
	}

	.mw--80ch {
		max-width: 80ch;
	}

/*    ----------------------------------------------------------------------------------------------
**    §2: Typography
*/

/*      ····························································································
**      >>> §2.1: Typograhy: Font Sizing
** 
**      NOTES:
**      • Units of "mx" stand for "milli-fold" and function similar to magnification units. Thus, 
**        1000mx = 1x, where x is the standard font-size for body-text. Thus, 1000mx means the same 
**        font-size as the default font-size for body text. 2000mx would be twice the size of body 
**        text.
**      • Depends on the utiltiy mixin .font-size(...) and the Less variable @fSize-array, which 
**        are both defined in utility-mixins.less.
*/

// TODO: Reduce number of options to reduce file size

	@fSize--class-array: ~"400mx" @fSize-400mx, ~"500mx" @fSize-500mx, ~"600mx" @fSize-600mx,
		~"700mx" @fSize-700mx, ~"800mx" @fSize-800mx, ~"900mx" @fSize-900mx, ~"1000mx" @fSize-1000mx,
		~"1100mx" @fSize-1100mx, ~"1200mx" @fSize-1200mx, ~"1300mx" @fSize-1300mx,
		~"1400mx" @fSize-1400mx, ~"1500mx" @fSize-1500mx, ~"1600mx" @fSize-1600mx,
		~"1700mx" @fSize-1700mx, ~"1800mx" @fSize-1800mx, ~"1900mx" @fSize-1900mx,
		~"2000mx" @fSize-2000mx, ~"2100mx" @fSize-2100mx, ~"2200mx" @fSize-2200mx,
		~"2300mx" @fSize-2300mx, ~"2400mx" @fSize-2400mx;

	.fSize-loop(@idx) when (@idx > 0) and (@idx <= length(@fSize-array)) {
		.fSize-loop((@idx - 1));
		@class-name: extract(extract(@fSize--class-array, @idx), 1);
		@value-idx: extract(extract(@fSize--class-array, @idx), 2);
		.font-size--@{class-name},
		.fs--@{class-name} {
			.font-size(@value-idx);
		}
	}
	.fSize-loop(length(@fSize-array));

	// Semantic font-sizing with reference to standard heading sizes
	.h1-text-size,
	.h1-fs {
		.font-size(@h1-font-size);
	}

	.h2-text-size,
	.h2-fs {
		.font-size(@h2-font-size);
	}

	.h3-text-size,
	.h3-fs {
		.font-size(@h3-font-size);
	}

	.h4-text-size,
	.h4-fs {
		.font-size(@h4-font-size);
	}

	.h5-text-size,
	.h5-fs {
		.font-size(@h5-font-size);
	}

	.h6-text-size,
	.h6-fs {
		.font-size(@h6-font-size);
	}

/*      ····························································································
**      >>> §2.2: Typograhy: Line heights
**
**      NOTES:
**      * See line 24 for explanation of "mx" units.
**      * Depends on the utiltiy mixin .set-lHeight(...) and the Less variable @lHeight-array, 
**        which are both defined in utility-mixins.less.
*/

	@lHeight-1--class: ~"1000mx";
	@lHeight-2--class: ~"1025mx";
	@lHeight-3--class: ~"1050mx";
	@lHeight-4--class: ~"1075mx";
	@lHeight-5--class: ~"1100mx";
	@lHeight-6--class: ~"1125mx";
	@lHeight-7--class: ~"1150mx";
	@lHeight-8--class: ~"1175mx";
	@lHeight-9--class: ~"1200mx";
	@lHeight-10--class: ~"1225mx";
	@lHeight-11--class: ~"1250mx";
	@lHeight-12--class: ~"1275mx";
	@lHeight-13--class: ~"1300mx";
	@lHeight-14--class: ~"1325mx";
	@lHeight-15--class: ~"1350mx";
	@lHeight-16--class: ~"1375mx";
	@lHeight-17--class: ~"1400mx";
	@lHeight-18--class: ~"1425mx";
	@lHeight-19--class: ~"1450mx";
	@lHeight-20--class: ~"1475mx";
	@lHeight-21--class: ~"1500mx";

	@lHeight--class-array: @lHeight-1--class, @lHeight-2--class, @lHeight-3--class,
		@lHeight-4--class, @lHeight-5--class, @lHeight-6--class, @lHeight-7--class,
		@lHeight-8--class, @lHeight-9--class, @lHeight-10--class, @lHeight-11--class,
		@lHeight-12--class, @lHeight-13--class, @lHeight-14--class, @lHeight-15--class,
		@lHeight-16--class, @lHeight-17--class, @lHeight-18--class, @lHeight-19--class,
		@lHeight-20--class, @lHeight-21--class;

	.lHeight-loop(@idx) when (@idx > 0) and (@idx <= length(@lHeight-array)) {
		.lHeight-loop((@idx - 1));
		@class-name: extract(@lHeight--class-array, @idx);
		.line-height--@{class-name},
		.lh--@{class-name} {
			.line-height(@idx);
		}
	}
	.lHeight-loop(length(@lHeight-array));

/*      ····························································································
**      >>> §2.3: Typograhy: Bolding
*/

	@fWeight-1--class: ~"light";
	@fWeight-1--value: @fWeight-light;
	@fWeight-2--class: ~"normal";
	@fWeight-2--value: @fWeight-normal;
	@fWeight-3--class: ~"semi-bold";
	@fWeight-3--value: @fWeight-semi-bold;
	@fWeight-4--class: ~"bold";
	@fWeight-4--value: @fWeight-bold;
	@fWeight-5--class: ~"extra-bold";
	@fWeight-5--value: @fWeight-extra-bold;

	@fWeight--array: @fWeight-1--class @fWeight-1--value, @fWeight-2--class @fWeight-2--value, 
		@fWeight-3--class @fWeight-3--value, @fWeight-4--class @fWeight-4--value, 
		@fWeight-5--class @fWeight-5--value;

	.fWeight-loop(@idx) when (@idx > 0) and (@idx <= length(@fWeight--array)) {
		.fWeight-loop((@idx - 1));
		@class-name: extract(extract(@fWeight--array, @idx), 1);
		@value: extract(extract(@fWeight--array, @idx), 2);
		.font-weight--@{class-name},
		.fw--@{class-name} {
			.font-weight(@value);
		}
	}
	.fWeight-loop(length(@fWeight--array));

/*      ····························································································
**      >>> §2.4: Typograhy: Text transformation
*/

	.text-transform--none,
	.tt--none {
		text-transform: none;
	}

	.text-transform--uppercase,
	.tt--uppercase {
		text-transform: uppercase;
	}

/*      ····························································································
**      >>> §2.5: Typograhy: Text alignment
*/

	.text-align--center,
	.ta--center {
		text-align: center;
	}

	.text-align--justify,
	.ta--justify {
		text-align: justify;
	}

	.text-align--left,
	.ta--left {
		text-align: left;
	}

	.text-align--right,
	.ta--right {
		text-align: left;
	}

/*    ----------------------------------------------------------------------------------------------
**    §3: Spacing
*/

	@spacing--array: ~"0mx" @spacing-0mx, ~"250mx" @spacing-250mx, ~"500mx" @spacing-500mx,
		~"750mx" @spacing-750mx, ~"1000mx" @spacing-1000mx, ~"1500mx" @spacing-1500mx,
		~"2000mx" @spacing-2000mx, ~"2500mx" @spacing-2500mx, ~"3000mx" @spacing-3000mx,
		~"3500mx" @spacing-3500mx, ~"4000mx" @spacing-4000mx;

	.spacing-loop(@idx) when (@idx > 0) and (@idx <= length(@spacing--array)) {
		.spacing-loop((@idx - 1));
		@class-name: extract(extract(@spacing--array, @idx), 1);
		@value-idx: extract(extract(@spacing--array, @idx), 2);
		.column * + .spacing--@{class-name},
		.column * + .sv--@{class-name} {
			margin-top: extract(@mSize-array, @value-idx);
		}
	}
	.spacing-loop(length(@spacing--array));

/*    ----------------------------------------------------------------------------------------------
**    §4: Floating
*/

	.float--none,
	.flt--none {
		float: none;
	}

	.float--right,
	.flt--right {
		float: right;
	}

	.float--left,
	.flt--left {
		float: left;
	}

/*      ····························································································
**      >>> §4.1: Clearing
*/

	.clear--left,
	.clr--left {
		clear: left;
	}

	.clear--right,
	.clr--right {
		clear: right;
	}

	.clear--both,
	.clr--both {
		clear: both;
	}


/*    ----------------------------------------------------------------------------------------------
**    §5: Display
*/

	.display--block,
	.dy--block {
		display: block;
	}

	.display--inline,
	.dy--inline {
		display: inline;
	}

	.display--inline-block,
	.dy--inline-block {
		display: inline-block;
	}

	.display--none,
	.dy--none {
		display: none;
	}

	.show-on-mobile {
		@media all {
			@media (min-width: (@large-mobile-screen-width + 1)) {
				display: none;
			}
		}
	}
	.hide-on-mobile {
		@media all {
			@media (max-width: (@large-mobile-screen-width)) {
				display: none;
			}
		}
	}

/*      ····························································································
**      >>> §5.1: Flex-box
*/

	.dy--flex {
		display: flex;
	}

	.fw--no-wrap {
		flex-wrap: nowrap;
	}

	.fw--wrap {
		flex-wrap: wrap;
	}

	.fw--wrap-reverse {
		flex-wrap: wrap;
	}

	.jc--start {
		justify-content: start;
	}

	.jc--center {
		justify-content: center;
	}

	.jc--space-between {
		justify-content: space-between;
	}

	.jc--space-around {
		justify-content: space-around;
	}

	.jc--space-evenly {
		justify-content: space-evenly;
	}

/*    ----------------------------------------------------------------------------------------------
**    §6: Margins
*/

// NOTE: Reuse @spacing--array for determining what sizes of margin to make available
	.margin-loop(@idx) when (@idx > 0) and (@idx <= length(@spacing--array)) {
		.margin-loop((@idx - 1));
		@class-name: extract(extract(@spacing--array, @idx), 1);
		@value-idx: extract(extract(@spacing--array, @idx), 2);
		.margin--@{class-name},
		.ma--@{class-name} {
			.margin(@value-idx, "all");
		}

		.margin-bottom--@{class-name},
		.mb--@{class-name} {
			.margin(@value-idx, "bottom");
		}

		.margin-left--@{class-name},
		.ml--@{class-name} {
			.margin(@value-idx, "left");
		}

		.margin-right--@{class-name},
		.mr--@{class-name} {
			.margin(@value-idx, "right");
		}

		.margin-top--@{class-name},
		.mt--@{class-name} {
			.margin(@value-idx, "top");
		}
	}
	.margin-loop(length(@spacing--array));

	.margin--centered {
		margin-left: auto;
		margin-right: auto;
	}

	.mh--auto {
		margin-left: auto;
		margin-right: auto;
	}

/*    ----------------------------------------------------------------------------------------------
**    §7: Padding
*/

/*      ····························································································
**      >>> §7.1: In units of "em"
*/

	@padding--array: ~"0mx" @pSize-0mx, ~"250mx" @pSize-250mx, ~"500mx" @pSize-500mx,
		~"750mx" @pSize-750mx, ~"1000mx" @pSize-1000mx, ~"1500mx" @pSize-1500mx,
		~"2000mx" @pSize-2000mx;

	.padding-loop(@idx) when (@idx > 0) and (@idx <= length(@spacing--array)) {
		.padding-loop((@idx - 1));
		@class-name: extract(extract(@padding--array, @idx), 1);
		@value-idx: extract(extract(@padding--array, @idx), 2);
		.padding--@{class-name},
		.pa--@{class-name} {
			.padding(@value-idx, "all");
		}

		.padding-bottom--@{class-name},
		.pb--@{class-name} {
			.padding(@value-idx, "bottom");
		}

		.padding-left--@{class-name},
		.pl--@{class-name} {
			.padding(@value-idx, "left");
		}

		.padding-right--@{class-name},
		.pr--@{class-name} {
			.padding(@value-idx, "right");
		}

		.padding-top--@{class-name},
		.pt--@{class-name} {
			.padding(@value-idx, "top");
		}
	}
	.padding-loop(length(@padding--array));

/*      ····························································································
**      >>> §7.1: In units of "rem"
*/

	@padding--rem--array: ~"0mx" @pSize-0mx--rem, ~"250mx" @pSize-250mx--rem,
		~"500mx" @pSize-500mx--rem, ~"750mx" @pSize-750mx--rem, ~"1000mx" @pSize-1000mx--rem,
		~"1500mx" @pSize-1500mx--rem, ~"2000mx" @pSize-2000mx--rem;

	.padding-rem-loop(@idx) when (@idx > 0) and (@idx <= length(@spacing--array)) {
		.padding-rem-loop((@idx - 1));
		@class-name: extract(extract(@padding--rem--array, @idx), 1);
		@value-idx: extract(extract(@padding--rem--array, @idx), 2);
		.pa--rem--@{class-name} {
			.padding--rem(@value-idx, "all");
		}

		.pb--rem--@{class-name} {
			.padding--rem(@value-idx, "bottom");
		}

		.pl--rem--@{class-name} {
			.padding--rem(@value-idx, "left");
		}

		.pr--rem--@{class-name} {
			.padding--rem(@value-idx, "right");
		}

		.pt--rem--@{class-name} {
			.padding--rem(@value-idx, "top");
		}
	}
	.padding-rem-loop(length(@padding--rem--array));


/*    ----------------------------------------------------------------------------------------------
**    §8: Colors
*/

	@color-modifiers-list: ~"lightest", ~"lighter", ~"light", ~"lightish", ~"darkish", ~"dark", 
		~"darker", ~"darkest", ~"accent";

	.color-class-loop(@class-name, @color-list, @idx) when (@idx > 0) and 
			(@idx <= length(@color-modifiers-list)) and (length(@color-modifiers-list) =
			length(@color-list)) {
		.color-class-loop(@class-name, @color-list, (@idx - 1));
		@modifier: extract(@color-modifiers-list, @idx);
		@color-value: extract(@color-list, @idx);
		.color--@{class-name}--@{modifier},
		.c--@{class-name}--@{modifier} {
			color: @color-value;
		}
	}

	.background-color-class-loop(@class-name, @color-list, @idx) when (@idx > 0) and 
			(@idx <= length(@color-modifiers-list)) and (length(@color-modifiers-list) =
			length(@color-list)) {
		.background-color-class-loop(@class-name, @color-list, (@idx - 1));
		@modifier: extract(@color-modifiers-list, @idx);
		@color-value: extract(@color-list, @idx);
		.bg-color--@{class-name}--@{modifier},
		.bgc--@{class-name}--@{modifier} {
			background-color: @color-value;
		}
		.bg-color--@{class-name}--@{modifier}--25pct,
		.bgc--@{class-name}--@{modifier}--25pct {
			.getRgbaForProp(returned, @color-value, 0.25);
			background-color: @returned;
		}
	}

	.define-bg-color-tint(@class-name, @color-list, @idx)  when (@idx > 0) and 
			(@idx <= length(@color-modifiers-list)) and (length(@color-modifiers-list) =
			length(@color-list)) {
		.bg-color--@{class-name}--tint,
		.bgc--@{class-name}--tint {
			background-color: tint(extract(@color-list, @idx), 87%);
		}	
	}

/*      ····························································································
**      >>> §8.1: WSU Grays
*/

	.color-class-loop(~"gray", @colors--grays__hex, length(@colors--grays__hex));

	.background-color-class-loop(~"gray", @colors--grays__hex, length(@colors--grays__hex));

// TODO: Finish setting up other color color utility classes
/*      ····························································································
**      >>> §8.2: WSU Crimsons
*/

	.color-class-loop(~"crimson", @colors--crimsons__hex, length(@colors--crimsons__hex));

	.background-color-class-loop(~"crimson", @colors--crimsons__hex, length(@colors--crimsons__hex));

	.define-bg-color-tint(~"crimson", @colors--crimsons__hex, @colors__darkish);

/*      ····························································································
**      >>> §8.3: WSU Greens
*/

	.color-class-loop(~"green", @colors--greens__hex, length(@colors--greens__hex));

	.background-color-class-loop(~"green", @colors--greens__hex, length(@colors--greens__hex));

	.define-bg-color-tint(~"green", @colors--greens__hex, @colors__accent);

/*      ····························································································
**      >>> §8.4: WSU Yellows
*/

	.color-class-loop(~"yellow", @colors--yellows__hex, length(@colors--yellows__hex));

	.background-color-class-loop(~"yellow", @colors--yellows__hex, length(@colors--yellows__hex));

	.define-bg-color-tint(~"yellow", @colors--yellows__hex, @colors__accent);

/*      ····························································································
**      >>> §8.5: WSU Blues
*/

	.color-class-loop(~"blue", @colors--blues__hex, length(@colors--blues__hex));

	.background-color-class-loop(~"blue", @colors--blues__hex, length(@colors--blues__hex));

	.define-bg-color-tint(~"blue", @colors--blues__hex, @colors__accent);

/*      ····························································································
**      >>> §8.6: WSU Oranges
*/

	.color-class-loop(~"orange", @colors--oranges__hex, length(@colors--oranges__hex));

	.background-color-class-loop(~"orange", @colors--oranges__hex, length(@colors--oranges__hex));

	.define-bg-color-tint(~"orange", @colors--oranges__hex, @colors__accent);
};

.declare-ruleset(@oue-utility-classes-ruleset, @oue-rules-wrapper);
