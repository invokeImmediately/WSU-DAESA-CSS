/*  ╔══════════════════════════════════════════════════════════════════════════════════════════════╗ 
 *  ║ #### INPUT FORMS ########################################################################### ║
 *  ╠==============================================================================================╣
 *  ║ Styling applied to input elements to which the gravity form classes have been applied.       ║
 *  ╚══════════════════════════════════════════════════════════════════════════════════════════════╝
 */
div.column {
    .gform_wrapper {
        max-width: 990px;
		.field_sublabel_above {
			.ginput_complex.ginput_container label {
				margin: 0;
			}
		}
        .gsection {
            margin-bottom: 0;
        }
        .gfield_checkbox li label, .gfield_radio li label {
            font-weight: normal;
        }
        .gfield_checkbox li { margin-bottom: 0; }
        .ginput_complex {
            span.ginput_full:not(:first-of-type) label, span.ginput_left:not(:first-of-type) label,
             span.ginput_right:not(:nth-of-type(2)) label {
                margin-top: 0.4em;
            }
            /*span.address_line_1 label {
                margin-bottom: 0.75em;
            }
            span.address_city, span.address_state, span.address_zip {
                margin-top: 0.75em;
            }*/
        }
        label.gfield_label {
            margin-top: 0;
            margin-bottom: 0;
            font-size: 1.125em;
        }
        ul:last-child {
            padding-bottom: 0;
        }
        .gform_body > ul {
            & > li.has-top-border:not(.gsection):not(.gfield_html) + li:not(.gsection)::before, 
            & > li.has-top-spacer:not(.gsection):not(.gfield_html) + li:not(.gsection)::before {
                content: "";
                display: block;
                width: 95%;
                height: 0;
                margin: @v-dflt-spcng auto 0;
            }
            & > li.has-top-border:not(.gsection):not(.gfield_html) + li:not(.gsection)::before {
                .rgb-dark-gray(); border-top: 1px dashed rgba(@rval,@gval,@bval,0.3333);
                 border-bottom: 1px dashed rgba(160,160,160,0.25);
            }
			& > li.gf-bckgrnd-field {
				display: none !important;
			}
        }
        #extensions_message {
            padding-left: 1rem;
        }
    }
    li.gfield {
        & > div.ginput_complex > span > label {
            color: @hex-dark-grayish-pink;
        }
        & > div.ginput_container_select {
			& > div.chosen-container {
				width: 100% !important;
			}
			& > div.chosen-container-single {
				& > a.chosen-single {
					height: 1.98em;
					background: linear-gradient(to bottom, rgba(0,0,0,0) 20%, rgba(0,0,0,0.038) 50%,
								rgba(0,0,0,0.07) 52%, rgba(0,0,0,0.045) 100%),
								linear-gradient(to bottom, #fff, #fff);
					line-height: 1.98em;
					&:hover {
						text-shadow: none;
					}
					& > div > b {
						background-position: ~"0 calc(-9px + 1.98em / 2)";
						@media only screen and (max-width: 641px) {
							top: ~"calc(0.99em - 3px)";
							background-position: 0 -7px;
						}
					}
				}
				&.chosen-with-drop > a.chosen-single {
					background: linear-gradient(to bottom, rgba(0,0,0,0.07) 20%, rgba(0,0,0,0) 80%),
								linear-gradient(to bottom, #fff, #fff);
				}
			}
        }
    }
    ul.gform_fields.top_label {
        & > li.gfield {
            & > div.gfield_description {
                padding: 0;
                margin: 0;
                color: @hex-dark-grayish-pink;
            }
            & > div.ginput_complex {
                margin-top: 0;
            }
        }
        & > li.gfield + li.gfield {
            .spaces-top-qrtr;
        }
    }
}

.gform_heading h3.gform_title:extend(div.column h3 all) {}

.oue-gf-rqrd-input, .oue-gf-rqrd-select, .oue-gf-hghlghts-rqrd-input, .oue-gf-hghlghts-rqrd-select {
    input, select {
        .transition(~"background 0.3s ease");
        &:focus {
            background-color: @hex-bright-blue !important;
        }
    }
    &.gfield_contains_required {
        input:not(.gf-value-entered):not(:focus), select:not(.gf-value-entered):not(:focus) {
            background-color: rgba(255,0,0,0.1);
        }
    }
}

.oue-gf-rqrd-checkbox, .oue-gf-hghlghts-rqrd-checkbox {
    &.gfield_contains_required {
        ul.gfield_checkbox, ul.gfield_radio {
            .transition(~"background 0.3s ease");
            &:not(.gf-value-entered) {
                background-color: rgba(255,0,0,0.1);
            }
        }
    }
}

.oue-gf-rqrd-txtarea, .oue-gf-hghlghts-rqrd-txtarea {
    textarea {
        .transition(~"background 0.3s ease");
        &:focus {
            background-color: @hex-bright-blue;
        }
    }
    &.gfield_contains_required {
        textarea {
            &:not(.gf-value-entered):not(:focus) {
                background-color: rgba(255,0,0,0.1);
            }
        }
    }
}

.oue-gf-actvtr-checkbox {
    .transition(~"background 0.3s ease");
    &.gf-activated {
        display: none !important;
    }
}

.oue-gf-actvtr-chain {
    .transition(all 0.3s ease);
    &.gf-hidden {
        display: none !important;
    }
}

.oue-gf-upload-chain {
    input {
        .transition(~"background 0.3s ease");
        &:focus {
            background-color: @hex-bright-blue;
        }
    }
    &.gfield_contains_required {
        input:not(.gf-value-entered):not(:focus) {
            background-color: rgba(255,0,0,0.1);
        }
    }
    &.gf-hidden {
        display: none !important;
    }
}

.oue-gf-revealed {
    .animation(gf-fades-in; 0.5s; linear; 0s; 1);
    .keyframes(gf-fades-in; @frames-simple-fade-in);
}
                                                                                                              
