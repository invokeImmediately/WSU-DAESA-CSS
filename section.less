/** ┌────────────────────────────────────────────────────────────────────────────────────────────┐
*** │ FILENAME: section.less                                                                     │
*** │                                                                                            │
*** │ AUTHOR: Daniel Rieck <daniel.rieck@wsu.edu> (https://github.com/invokeImmediately)         │
*** │                                                                                            │
*** │ DESCRIPTION: Includes styles for section elements of WSU Office of Undergraduate Education │
*** │   web pages built using the builder template of the Spine parent theme of WSUWP. Styles    │
*** │   are designed to accompany or supersede styling associated with the theme.                │
*** └────────────────────────────────────────────────────────────────────────────────────────────┘
**/

/** ================================================================================================
*** SEMANTIC CSS FOR STYLING OUE SECTION ELEMENTS
**/

/**  ───────────────────────────────────────────────────────────────────────────────────────────────
***  TABLE OF CONTENTS:
***  ────────────────────────────────────────────────────────────────────────────────────────────
***  §1: Utility classes.......................................................................37
***  §2: Legacy article headers................................................................47
***  §3: Halves builder sections..............................................................126
***  §4: Side-right builder sections..........................................................138
***  §5: Thirds builder sections..............................................................150
***  §6: Section coloring.....................................................................181
***  §7: Spacing overrides to improve responsive design.......................................215
***  §8: Gutter padding overrides to improve mobile design....................................297
***  §9: Column stacking overrides to improve mobile design...................................518
***  §10: Linked column styling...............................................................540
***  §11: Accessibility friendly utility classes.............................................1425
***    >>> §11.1: Font-sizing variables for columns..........................................1429
***    >>> §11.2: Default font sizes for column elements.....................................1443
***  ───────────────────────────────────────────────────────────────────────────────────────────────
**/

@oue-section-ruleset: {

/**   ----------------------------------------------------------------------------------------------
***   §1: Utility classes
**/

	// TODO: Recode to rely on class-based selection logic.
	section {
		&.column-one-with-bottom-margin > .column.one {
			margin-bottom: 2rem;
		}

/**   ----------------------------------------------------------------------------------------------
***   §2: Legacy article headers
**/

		&:not(.row).article-header {
			background-size: auto 100% !important;
			height: 120px;
			margin-bottom: 1rem;
			max-width: 922px;

			body.blog &,
			body.single-post & {
				margin-bottom: 0;
			}

			.header-content {
				margin-left: 1rem;
				margin-right: 1rem;
				position: relative;
				top: 50%;
				transform: translateY(-50%);

				h1,
				h2,
				h3 {
					font-size: 2.826rem;
					line-height: 0.8em;
					text-transform: uppercase;
				}

				h1 + h2 {
					font-style: normal;
				}

				h1 + h2,
				h2 + h3,
				h1 .subtitle {
					font-size: 1.261rem;
					line-height: 0.8em;
					margin-top: 0;
				}

				.title,
				h2:first-child {
					background-color: rgba(0, 0, 0, 0.7);
					border: 1px solid white;
					border-bottom-color: transparent;
					padding: 4px 4px 9px;
				}

				.title,
				.subtitle {
					display: block;
				}
			}

			@media all {
				.header-content {
					h1, h2 {
						.has-alt-font;
						color: @hex-white;
					}

					h3 {
						color: @hex-white;
					}

					h1 {
						.textShadow3D(@hex-white, 3px);
					}

					h2 {
						.textShadow3D(@hex-white, 3px);
					}

					h1 + h2,
					h3,
					h1 .subtitle {
						.textShadow3D(@hex-white, 2px);
					}

					h1 + h2,
					h2 + h3,
					.subtitle {
						.rgb-crimson();
						background-color: rgba(@rval,@gval,@bval,0.95);
						border: 1px solid white;
						padding: 4px 4px 5px;
					}

					mark.highlight {
						.textShadow3D(#AEC7CB,2px);
					}
				}
			}

			@media print {
				background: transparent !important;

				.header-content {
					margin-left: 0;
					margin-right: 0;
					h2,
					h3 {
						padding-left: 0;
					}
				}
			}
		}

/**   ----------------------------------------------------------------------------------------------
***   §3: Halves builder sections
**/

		&.halves {
			.column {
				p:not([class*="center"]) {
					text-align: left;
				}
			}
		}

/**   ----------------------------------------------------------------------------------------------
***   §4: Side-right builder sections
**/

		&.side-right {
			.column.two {
				p {
					text-align: left;
				}
			}
		}

/**   ----------------------------------------------------------------------------------------------
***   §5: Thirds builder sections
**/

		&.thirds {
			img.show-when-adjacent {
				@media all {
					@media (min-width: (@column-floating-threshold+1)) {
						width: 100%;
					}

					@media (max-width: @column-floating-threshold) {
						display: none;
					}
				}
			}

			img.show-when-stacked {
				@media all {
					@media (min-width: (@column-floating-threshold+1)) {
						display: none;
					}

					@media (max-width: @column-floating-threshold) {
						width: 100%;
					}
				}
			}
		}
	}

/**   ----------------------------------------------------------------------------------------------
***   §6: Section coloring
**/

	@class-setup-matrix: has-charcoal-background @hex-charcoal-gray @hex-white,
		has-gray-background @hex-bright-gray none,
		has-crimson-background @hex-crimson @hex-white,
		has-blue-background @hex-accent-blue @hex-white;

	.specify-section-coloring(@bg-clr, @fg-clr) when (iscolor(@bg-clr)) and (iscolor(@fg-clr)) {
		background-color: @bg-clr;

		.column {
			color: @fg-clr;
		}
	}

	.specify-section-coloring(@bg-clr, @fg-clr) when (iscolor(@bg-clr)) and not (iscolor(@fg-clr)) {
		background-color: @bg-clr;
	}

	.setup-coloring-classes(@matrix, @idx: 1) when (@idx <= length(@matrix)){
		@class-list: extract(@matrix, @idx);
		@class-name: extract(@class-list, 1);
		@class-bg-clr: extract(@class-list, 2);
		@class-fg-clr: extract(@class-list, 3);

		.row.@{class-name} {
			.specify-section-coloring(@class-bg-clr, @class-fg-clr);
		}
		.setup-coloring-classes(@matrix, @idx + 1);
	}
	.setup-coloring-classes(@class-setup-matrix);

/**   ----------------------------------------------------------------------------------------------
***   §7: Spacing overrides to improve responsive design of WSU Spine builder template
**/

	main section.row {
		& > .column > article > .article-body,
		& > .column > article > .article-summary,
		& > .column table > tbody > tr > td {
			& > ul:not(.no-btm-margin),
			& > section > ul:not(.no-btm-margin),
			& > div > ul:not(.no-btm-margin),
			& > ol:not(.no-btm-margin),
			& > section > ol:not(.no-btm-margin),
			& > div > ol:not(.no-btm-margin),
			& > .gform_wrapper .gfield_html > p:not(:last-child),
			& > .gform_confirmation_wrapper p:not(:last-child) {
				margin-bottom: @v-btm-mrgns;
			}
		}

		&:last-child {
			& > .column {
				& > .column > article > .article-body,
				& > .column > article > .article-summary {
					& > ul:last-child,
					& > section > ul:last-child,
					& > div > ul:last-child,
					& > ol:last-child,
					& > section > ol:last-child,
					& > div > ol:last-child {
						margin-bottom: 0;
					}
				}
			}
			// TODO: Check and see if these are correct.
			&.halves,
			&.thirds,
			&.quarters,
			&.side-right,
			&.side-left {
				& > .column:not(:last-child),
				& > .column:not(:last-child) > article > .article-body,
				& > .column:not(:last-child) > article > .article-summary,
				& > .column:not(:last-child) > section {
					& > :last-child {
						@media all and (max-width: @column-floating-threshold) {
							margin-bottom: @v-btm-mrgns;
						}
					}
				}
			}
		}

		& > .column table > tbody > tr > td {
			& > p:last-child,
			& > section > p:last-child,
			& > div > p:last-child,
			& > ul:last-child,
			& > section > ul:last-child,
			& > div > ul:last-child,
			& > ol:last-child,
			& > section > ol:last-child,
			& > div > ol:last-child {
				margin-bottom: 0;
			}
		}
	}

	.h1-header + section.pad-top {
		& .column {
			padding-top: @v-dflt-spcng;
		}

		&.short .column {
			padding-top: (@v-dflt-spcng / 2);
		}

		&.tall .column {
			padding-top: (@v-dflt-spcng * 2);
		}
	}
	
/**   ----------------------------------------------------------------------------------------------
***   §8: Gutter padding overrides to improve mobile design of WSU Spine builder 
***   template
**/

	@media only screen and (min-width:(@large-mobile-screen-width + 1))
			and (max-width:@column-floating-threshold) {
		.gutter .column:not(.gutterless),
		.guttered {
			padding-left: @v-dflt-spcng;
			padding-right: @v-dflt-spcng
		}

	   .single.gutter .column:not(.gutterless) {
			padding-left: @v-dflt-spcng;
			padding-right: @v-dflt-spcng
		}

		.halves.gutter .column.one:not(.gutterless),
		.halves.gutter .column:nth-of-type(2n+3):not(.gutterless),
		.side-left.gutter .column.one:not(.gutterless),
		.side-right.gutter .column.one:not(.gutterless) {
			padding-right: @v-dflt-spcng
		}

		.halves.gutter .column.two:not(.gutterless),
		.halves.gutter .column:nth-of-type(2n+4):not(.gutterless),
		.side-left.gutter .column.two:not(.gutterless),
		.side-right.gutter .column.two:not(.gutterless) {
			padding-left: @v-dflt-spcng
		}

		.thirds.gutter .column.one:not(.gutterless),
		.thirds.gutter .column:nth-of-type(3n+4):not(.gutterless),
		.triptych.gutter .column.one:not(.gutterless) {
			padding-right: @v-dflt-spcng
		}

		.thirds.gutter .column.two:not(.gutterless),
		.thirds.gutter .column:nth-of-type(3n+5):not(.gutterless),
		.triptych.gutter .column.two:not(.gutterless) {
			padding-left: @v-dflt-spcng;
			padding-right: @v-dflt-spcng
		}

		.thirds.gutter .column.three:not(.gutterless),
		.thirds.gutter .column:nth-of-type(3n+6):not(.gutterless),
		.triptych.gutter .column.three:not(.gutterless) {
			padding-left: @v-dflt-spcng
		}

		.quarters.gutter .column.one:not(.gutterless),
		.quarters.gutter .column:nth-of-type(4n+5):not(.gutterless) {
			padding-right: (@v-dflt-spcng / 2)
		}

		.quarters.gutter .column.two:not(.gutterless),
		.quarters.gutter .column:nth-of-type(4n+6):not(.gutterless) {
			padding-left: (@v-dflt-spcng / 2);
			padding-right: @v-dflt-spcng
		}

		.quarters.gutter .column.three:not(.gutterless),
		.quarters.gutter .column:nth-of-type(4n+7):not(.gutterless) {
			padding-left: @v-dflt-spcng;
			padding-right: (@v-dflt-spcng / 2)
		}

		.quarters.gutter .column.four:not(.gutterless),
		.quarters.gutter .column:nth-of-type(4n+8):not(.gutterless) {
			padding-left: (@v-dflt-spcng / 2)
		}
	}

	@media only screen and (min-width:(@mobile-screen-width + 1))
			and (max-width:@large-mobile-screen-width) {
		.gutter .column:not(.gutterless),
		.guttered {
			padding-left: (@v-dflt-spcng / 2);
			padding-right: (@v-dflt-spcng / 2);
		}

		.single.gutter .column:not(.gutterless) {
			padding-left: (@v-dflt-spcng / 2);
			padding-right: (@v-dflt-spcng / 2);
		}

		.halves.gutter .column.one:not(.gutterless),
		.halves.gutter .column:nth-of-type(2n+3):not(.gutterless),
		.side-left.gutter .column.one:not(.gutterless),
		.side-right.gutter .column.one:not(.gutterless) {
			padding-right: (@v-dflt-spcng / 2);
		}

		.halves.gutter .column.two:not(.gutterless),
		.halves.gutter .column:nth-of-type(2n+4):not(.gutterless),
		.side-left.gutter .column.two:not(.gutterless),
		.side-right.gutter .column.two:not(.gutterless) {
			padding-left: (@v-dflt-spcng / 2);
		}

		.thirds.gutter .column.one:not(.gutterless),
		.thirds.gutter .column:nth-of-type(3n+4):not(.gutterless),
		.triptych.gutter .column.one:not(.gutterless) {
			padding-right: (@v-dflt-spcng / 2);
		}

		.thirds.gutter .column.two:not(.gutterless),
		.thirds.gutter .column:nth-of-type(3n+5):not(.gutterless),
		.triptych.gutter .column.two:not(.gutterless) {
			padding-left: (@v-dflt-spcng / 2);
			padding-right: (@v-dflt-spcng / 2);
		}

		.thirds.gutter .column.three:not(.gutterless),
		.thirds.gutter .column:nth-of-type(3n+6):not(.gutterless),
		.triptych.gutter .column.three:not(.gutterless) {
			padding-left: (@v-dflt-spcng / 2);
		}

		.quarters.gutter .column.one:not(.gutterless),
		.quarters.gutter .column:nth-of-type(4n+5):not(.gutterless) {
			padding-right: (@v-dflt-spcng / 2 / 2);
		}

		.quarters.gutter .column.two:not(.gutterless),
		.quarters.gutter .column:nth-of-type(4n+6):not(.gutterless) {
			padding-left: (@v-dflt-spcng / 2 / 2);
			padding-right: (@v-dflt-spcng / 2);
		}

		.quarters.gutter .column.three:not(.gutterless),
		.quarters.gutter .column:nth-of-type(4n+7):not(.gutterless) {
			padding-left: (@v-dflt-spcng / 2);
			padding-right: (@v-dflt-spcng / 2 / 2);
		}

		.quarters.gutter .column.four:not(.gutterless),
		.quarters.gutter .column:nth-of-type(4n+8):not(.gutterless) {
			padding-left: (@v-dflt-spcng / 2 / 2);
		}

		section.gutter > header {
			padding-left: (@v-dflt-spcng / 2);
			padding-right: (@v-dflt-spcng / 2);
		}
	}

	@media only screen and (max-width:@mobile-screen-width) {
		.gutter .column:not(.gutterless),
		.guttered {
			padding-left: (@v-dflt-spcng / 4);
			padding-right: (@v-dflt-spcng / 4);
		}

		.single.gutter .column:not(.gutterless) {
			padding-left: (@v-dflt-spcng / 4);
			padding-right: (@v-dflt-spcng / 4);
		}

		.halves.gutter .column.one:not(.gutterless),
		.halves.gutter .column:nth-of-type(2n+3):not(.gutterless),
		.side-left.gutter .column.one:not(.gutterless),
		.side-right.gutter .column.one:not(.gutterless) {
			padding-right: (@v-dflt-spcng / 4);
		}

		.halves.gutter .column.two:not(.gutterless),
		.halves.gutter .column:nth-of-type(2n+4):not(.gutterless),
		.side-left.gutter .column.two:not(.gutterless),
		.side-right.gutter .column.two:not(.gutterless) {
			padding-left: (@v-dflt-spcng / 4);
		}

		.thirds.gutter .column.one:not(.gutterless),
		.thirds.gutter .column:nth-of-type(3n+4):not(.gutterless),
		.triptych.gutter .column.one:not(.gutterless) {
			padding-right: (@v-dflt-spcng / 4);
		}

		.thirds.gutter .column.two:not(.gutterless),
		.thirds.gutter .column:nth-of-type(3n+5):not(.gutterless),
		.triptych.gutter .column.two:not(.gutterless) {
			padding-left: (@v-dflt-spcng / 4);
			padding-right: (@v-dflt-spcng / 4);
		}

		.thirds.gutter .column.three:not(.gutterless),
		.thirds.gutter .column:nth-of-type(3n+6):not(.gutterless),
		.triptych.gutter .column.three:not(.gutterless) {
			padding-left: (@v-dflt-spcng / 4);
		}

		.quarters.gutter .column.one:not(.gutterless),
		.quarters.gutter .column:nth-of-type(4n+5):not(.gutterless) {
			padding-right: (@v-dflt-spcng / 2 / 4);
		}

		.quarters.gutter .column.two:not(.gutterless),
		.quarters.gutter .column:nth-of-type(4n+6):not(.gutterless) {
			padding-left: (@v-dflt-spcng / 2 / 4);
			padding-right: (@v-dflt-spcng / 4);
		}

		.quarters.gutter .column.three:not(.gutterless),
		.quarters.gutter .column:nth-of-type(4n+7):not(.gutterless) {
			padding-left: (@v-dflt-spcng / 4);
			padding-right: (@v-dflt-spcng / 2 / 4);
		}

		.quarters.gutter .column.four:not(.gutterless),
		.quarters.gutter .column:nth-of-type(4n+8):not(.gutterless) {
			padding-left: (@v-dflt-spcng / 2 / 4);
		}

		section.gutter > header {
			padding-left: (@v-dflt-spcng / 4);
			padding-right: (@v-dflt-spcng / 4);
		}
	}

/**   ----------------------------------------------------------------------------------------------
***   §9: Column stacking overrides to improve mobile design of WSU Spine builder 
***   template
**/

	@media all and (max-width: @column-floating-threshold) {
		.row:not(.pad-top) {
			&.halves,
			&.thirds,
			&.quarters,
			&.side-right,
			&.side-left {
				.one ~ .column {
					margin-top: @v-dflt-spcng;
				}
			}
		}
	}
};

.declare-ruleset(@oue-section-ruleset, @oue-rules-wrapper);

/**   ----------------------------------------------------------------------------------------------
***   §10: Linked column styling
**/

.use-linked-columns() {
	.row.has-linked-columns:not(.gutter) {
		.spaces-top-half;

		&:last-child {
			margin-bottom: @v-dflt-spcng;
		}

		.column {
			position: relative;
			height: 0;
			padding-bottom: ~"calc(33% - @{v-dflt-spcng}) !important";
			background-position: center center;
			background-size: 100% auto;
			text-align: center;

			&:not(:first-child) {
				@media all {
					@media (min-width: (@column-floating-threshold + 1)) {
						border-left: 1px solid rgba(red(@hex-white), green(@hex-white), 
							blue(@hex-white), 0.7);
					}

					@media (max-width: @column-floating-threshold) {
						border-top: 1px solid rgba(red(@hex-white), green(@hex-white), 
							blue(@hex-white), 0.7);
					}
				}
			}

			& > :first-child:not(header),
			& > header:first-child + *,
			& > .shift-to-bottom:first-of-type {
				position: absolute;
				left: 50%;
				width: ~"calc(100% - @{v-dflt-spcng})";
				max-width: @large-mobile-screen-width;
				word-break: break-word;
				color: @hex-white;
				text-shadow: 1px 1px 0 @hex-black, 2px 2px 2px rgba(red(@hex-black), 
					green(@hex-black), blue(@hex-black), 0.5), 0 0 18px rgba(red(@hex-black), 
					green(@hex-black), blue(@hex-black), 0.9);
				pointer-events: none;
				z-index: 2;
			}

			& > :first-child:not(header),
			& > header:first-child + * {
				top: 50%;
				.transform(~"translate(-50%, -50%)");

				&.shift-to-top {
					top: (@v-dflt-spcng / 2);
					.transform(~"translateX(-50%)");
				}
			}

			& > .shift-to-bottom:first-of-type {
				bottom: (@v-dflt-spcng / 2);
				border-top: 1px solid @hex-white;
				margin-bottom: 0 !important;
				box-shadow: 0 1px 0 0 rgba(red(@hex-black), green(@hex-black), 
					blue(@hex-black), 0.3333) inset;
				.transform(~"translateX(-50%)");
			}

			&:hover {
				background-size: 110% auto;
				.transition(~"all 1s ease");
				& > :first-child:not(header),
				& > header:first-child + *,
				& > .shift-to-bottom:first-of-type {
					color: @hex-light-crimson;
					.transition(~"all 0.3s linear");
				}

				& > .shift-to-bottom:first-of-type {
					border-top: 1px solid @hex-light-crimson;
				}
			}

			* {
				text-align: inherit;
			}

			a {
				display: none;
			}

			& > :last-child > a:first-of-type {
				border-width: 0;
				box-shadow: none;
				box-sizing: border-box;
				color: transparent;
				display: block;
				height: 100%;
				left: 0;
				position: absolute;
				top: 0;
				width: 100%;
				z-index: 1;

				&:hover {
					background-color: rgba(red(@hex-white), green(@hex-white), 
						blue(@hex-white), 0.33);
					border-width: 1px;
					text-shadow: none;
					.transition(~"background-color 0.3s linear");
				}
			}

			&.bg-pinned-at-top {
				background-position: center top;
			}

			&.bg-pinned-toward-top {
				background-position: center 25%;
			}

			&.bg-pinned-at-left {
				background-position: left top;
			}

			&.bg-pinned-toward-left {
				background-position: 25% top;
			}

			&.bg-pinned-at-right {
				background-position: right top;
			}

			&.bg-pinned-toward-right {
				background-position: 75% top;
			}

			&.has-crimson-bg,
			&.has-gray-bg,
			&.has-yellow-bg,
			&.has-blue-bg, 
			&.has-orange-bg, 
			&.has-green-bg,
			&.has-cyan-bg,
			&.has-black-bg {
				&:after,
				&:before {
					content: "";
					position: absolute;
					top: 0;
					left: 0;
					height: 100%;
					width: 100%;
					pointer-events: none;
					opacity: 1;
				}

				&:before {
					opacity: 0;
				}

				&:hover {
					&:after,
					&:before {
						.transition(~"all 0.3s linear");
					}

					&:after {
						opacity: 0;
					}

					&:before {
						opacity: 1;
					}
				}
			}

			&.has-crimson-bg {
				&:after {
					background: linear-gradient(to bottom,
						rgba(red(@hex-crimson), green(@hex-crimson), blue(@hex-crimson), 0.0),
						rgba(red(@hex-crimson), green(@hex-crimson),
							blue(@hex-crimson),0.2) 50%,
						rgba(red(@hex-crimson), green(@hex-crimson), blue(@hex-crimson), 1));
				}

				&:before {
					background: linear-gradient(to top,
						rgba(red(@hex-crimson), green(@hex-crimson), blue(@hex-crimson),0.0),
						rgba(red(@hex-crimson), green(@hex-crimson), 
							blue(@hex-crimson),0.2) 50%,
						rgba(red(@hex-crimson), green(@hex-crimson), blue(@hex-crimson),1));
				}
			}

			&.has-gray-bg {
				&:after {
					background: linear-gradient(to bottom,
						rgba(red(@hex-light-gray), green(@hex-light-gray), 
							blue(@hex-light-gray), 0.0),
						rgba(red(@hex-light-gray), green(@hex-light-gray), 
							blue(@hex-light-gray), 0.2) 50%,
						rgba(red(@hex-light-gray), green(@hex-light-gray), 
							blue(@hex-light-gray), 1));
				}

				&:before {
					background: linear-gradient(to top,
						rgba(red(@hex-light-gray), green(@hex-light-gray), 
							blue(@hex-light-gray),0.0),
						rgba(red(@hex-light-gray), green(@hex-light-gray), 
							blue(@hex-light-gray),0.2) 50%,
						rgba(red(@hex-light-gray), green(@hex-light-gray), 
							blue(@hex-light-gray),1));
				}

				&:hover {
					& > :first-child:not(header),
					& > header:first-child + *,
					& > .shift-to-bottom:first-of-type {
						color: @hex-light-gray;
					}

					& > .shift-to-bottom:first-of-type {
						border-top: 1px solid @hex-light-gray;
					}
				}
			}

			&.has-yellow-bg {
				&:after {
					background: linear-gradient(to bottom,
						rgba(red(@hex-accent-yellow), green(@hex-accent-yellow), 
							blue(@hex-accent-yellow), 0.0),
						rgba(red(@hex-accent-yellow), green(@hex-accent-yellow), 
							blue(@hex-accent-yellow), 0.2) 50%,
						rgba(red(@hex-accent-yellow), green(@hex-accent-yellow), 
							blue(@hex-accent-yellow), 1));
				}

				&:before {
					background: linear-gradient(to top,
						rgba(red(@hex-accent-yellow), green(@hex-accent-yellow), 
							blue(@hex-accent-yellow), 0.0),
						rgba(red(@hex-accent-yellow), green(@hex-accent-yellow), 
							blue(@hex-accent-yellow), 0.2) 50%,
						rgba(red(@hex-accent-yellow), green(@hex-accent-yellow), 
							blue(@hex-accent-yellow), 1));
				}

				&:hover {
					& > :first-child:not(header),
					& > header:first-child + *,
					& > .shift-to-bottom:first-of-type {
						color: @hex-accent-yellow;
					}

					& > .shift-to-bottom:first-of-type {
						border-top: 1px solid @hex-accent-yellow;
					}
				}
			}

			&.has-blue-bg {
				&:after {
					background: linear-gradient(to bottom,
						rgba(red(@hex-accent-blue), green(@hex-accent-blue), 
							blue(@hex-accent-blue), 0.0),
						rgba(red(@hex-accent-blue), green(@hex-accent-blue), 
							blue(@hex-accent-blue), 0.2) 50%,
						rgba(red(@hex-accent-blue), green(@hex-accent-blue), 
							blue(@hex-accent-blue), 1));
				}

				&:before {
					background: linear-gradient(to top,
						rgba(red(@hex-accent-blue), green(@hex-accent-blue), 
							blue(@hex-accent-blue), 0.0),
						rgba(red(@hex-accent-blue), green(@hex-accent-blue), 
							blue(@hex-accent-blue), 0.2) 50%,
						rgba(red(@hex-accent-blue), green(@hex-accent-blue), 
							blue(@hex-accent-blue), 1));
				}

				&:hover {
					& > :first-child:not(header),
					& > header:first-child + *,
					& > .shift-to-bottom:first-of-type {
						color: @hex-accent-blue;
					}

					& > .shift-to-bottom:first-of-type {
						border-top: 1px solid @hex-accent-blue;
					}
				}
			}

			&.has-green-bg {
				&:after {
					background: linear-gradient(to bottom,
						rgba(red(@hex-accent-green), green(@hex-accent-green), 
							blue(@hex-accent-green), 0.0),
						rgba(red(@hex-accent-green), green(@hex-accent-green), 
							blue(@hex-accent-green), 0.2) 50%,
						rgba(red(@hex-accent-green), green(@hex-accent-green), 
							blue(@hex-accent-green), 1));
				}

				&:before {
					background: linear-gradient(to top,
						rgba(red(@hex-accent-green), green(@hex-accent-green), 
							blue(@hex-accent-green), 0.0),
						rgba(red(@hex-accent-green), green(@hex-accent-green), 
							blue(@hex-accent-green), 0.2) 50%,
						rgba(red(@hex-accent-green), green(@hex-accent-green), 
							blue(@hex-accent-green), 1));
				}

				&:hover {
					& > :first-child:not(header),
					& > header:first-child + *,
					& > .shift-to-bottom:first-of-type {
						color: @hex-accent-green;
					}

					& > .shift-to-bottom:first-of-type {
						border-top: 1px solid @hex-accent-green;
					}
				}
			}

			&.has-orange-bg {
				&:after {
					background: linear-gradient(to bottom,
						rgba(red(@hex-accent-orange), green(@hex-accent-orange), 
							blue(@hex-accent-orange), 0.0),
						rgba(red(@hex-accent-orange), green(@hex-accent-orange), 
							blue(@hex-accent-orange), 0.2) 50%,
						rgba(red(@hex-accent-orange), green(@hex-accent-orange), 
							blue(@hex-accent-orange), 1));
				}

				&:before {
					background: linear-gradient(to top,
						rgba(red(@hex-accent-orange), green(@hex-accent-orange), 
							blue(@hex-accent-orange), 0.0),
						rgba(red(@hex-accent-orange), green(@hex-accent-orange), 
							blue(@hex-accent-orange), 0.2) 50%,
						rgba(red(@hex-accent-orange), green(@hex-accent-orange), 
							blue(@hex-accent-orange), 1));
				}

				&:hover {
					& > :first-child:not(header),
					& > header:first-child + *,
					& > .shift-to-bottom:first-of-type {
						color: @hex-accent-orange;
					}

					& > .shift-to-bottom:first-of-type {
						border-top: 1px solid @hex-accent-orange;
					}
				}
			}

			&.has-cyan-bg {
				&:after {
					background: linear-gradient(to bottom,
						rgba(0, 173, 164, 0.0),
						rgba(0, 173, 164, 0.2) 50%,
						rgba(0, 173, 164, 1));
				}

				&:before {
					background: linear-gradient(to top,
						rgba(0, 173, 164, 0.0),
						rgba(0, 173, 164, 0.2) 50%,
						rgba(0, 173, 164, 1));
				}

				&:hover {
					& > :first-child:not(header),
					& > header:first-child + *,
					& > .shift-to-bottom:first-of-type {
						color: #00ada4;
					}

					& > .shift-to-bottom:first-of-type {
						border-top: 1px solid #00ada4;
					}
				}
			}
		}

		&.single {
			.column {
				& > :first-child:not(header),
				& > header:first-child + *,
				& > .shift-to-bottom:first-of-type {
					max-width: none;
				}
			}
		}

		&.halves {
			#binder.max-1386 & {
				@media all and (min-width: 1205px) {
					padding-bottom: 0 !important;
					height: 327px;
				}
			}
		}

		&.thirds,
		&.quarters {
			& + &.thirds,
			& + &.quarters {
				border-top: 1px solid rgba(red(@hex-white), green(@hex-white), 
					blue(@hex-white), 0.7);
				margin-top: 0 !important;
			}

			.column {
				padding-bottom: ~"calc(33% - @{v-dflt-spcng}) !important";
				background-size: auto 100%;

				&:hover {
					background-size: auto 110%;
					//background-size: 110% auto;
				}

				@media all {
					@media (min-width: (@column-floating-threshold + 1)) 
							and (max-width: (@tablet-screen-width)) {
						padding-bottom: ~"calc(40% - @{v-dflt-spcng}) !important";
					}

					@media (max-width: @column-floating-threshold) {
						background-size: 100% auto;

						&:hover {
							background-size: 110% auto;
						}
					}

					@media (max-width: (@large-mobile-screen-width - 80)) {
						& > :first-child:not(header),
						& > header:first-child + * {
							&.shift-to-top {
								top: (@v-dflt-spcng / 4);
							}
						}

						& > .shift-to-bottom:first-of-type {
							bottom: (@v-dflt-spcng / 4);
						}
					}
				}

				&.has-crimson-bg {
					&:after {
						background: linear-gradient(to bottom,
							rgba(red(@hex-crimson), green(@hex-crimson), 
								blue(@hex-crimson), 0.0),
							rgba(red(@hex-crimson), green(@hex-crimson), 
								blue(@hex-crimson), 0.2) 50%,
							rgba(red(@hex-crimson), green(@hex-crimson), 
								blue(@hex-crimson), 1) 80%);

						@media all and (max-width: @large-mobile-screen-width) {
							background: linear-gradient(to bottom,
								rgba(red(@hex-crimson), green(@hex-crimson), 
									blue(@hex-crimson), 0.0),
								rgba(red(@hex-crimson), green(@hex-crimson), 
									blue(@hex-crimson), 0.2) 40%,
								rgba(red(@hex-crimson), green(@hex-crimson), 
									blue(@hex-crimson), 1) 67%);
						}
					}

					&:before {
						background: linear-gradient(to top,
							rgba(red(@hex-crimson), green(@hex-crimson), 
								blue(@hex-crimson), 0.0),
							rgba(red(@hex-crimson), green(@hex-crimson), 
								blue(@hex-crimson), 0.2) 50%,
							rgba(red(@hex-crimson), green(@hex-crimson), 
								blue(@hex-crimson), 1) 80%);
					}
				}

				&.has-gray-bg {
					&:after {
						background: linear-gradient(to bottom,
							rgba(red(@hex-light-gray), green(@hex-light-gray), 
								blue(@hex-light-gray), 0.0),
							rgba(red(@hex-light-gray), green(@hex-light-gray), 
								blue(@hex-light-gray), 0.2) 50%,
							rgba(red(@hex-light-gray), green(@hex-light-gray), 
								blue(@hex-light-gray), 1) 80%);

						@media all and (max-width: @large-mobile-screen-width) {
							background: linear-gradient(to bottom,
								rgba(red(@hex-light-gray), green(@hex-light-gray), 
									blue(@hex-light-gray), 0.0),
								rgba(red(@hex-light-gray), green(@hex-light-gray), 
									blue(@hex-light-gray), 0.2) 40%,
								rgba(red(@hex-light-gray), green(@hex-light-gray), 
									blue(@hex-light-gray), 1) 67%);
						}
					}

					&:before {
						background: linear-gradient(to top,
							rgba(red(@hex-light-gray), green(@hex-light-gray), 
								blue(@hex-light-gray), 0.0),
							rgba(red(@hex-light-gray), green(@hex-light-gray), 
								blue(@hex-light-gray), 0.2) 50%,
							rgba(red(@hex-light-gray), green(@hex-light-gray), 
								blue(@hex-light-gray), 1) 80%);
					}
				}

				&.has-yellow-bg {
					&:after {
						background: linear-gradient(to bottom,
							rgba(red(@hex-accent-yellow), green(@hex-accent-yellow), 
								blue(@hex-accent-yellow), 0.0),
							rgba(red(@hex-accent-yellow), green(@hex-accent-yellow), 
								blue(@hex-accent-yellow), 0.2) 50%,
							rgba(red(@hex-accent-yellow), green(@hex-accent-yellow), 
								blue(@hex-accent-yellow), 1) 80%);

						@media all and (max-width: @large-mobile-screen-width) {
							background: linear-gradient(to bottom,
								rgba(red(@hex-accent-yellow), green(@hex-accent-yellow), 
									blue(@hex-accent-yellow), 0.0),
								rgba(red(@hex-accent-yellow), green(@hex-accent-yellow), 
									blue(@hex-accent-yellow), 0.2) 40%,
								rgba(red(@hex-accent-yellow), green(@hex-accent-yellow), 
									blue(@hex-accent-yellow), 1) 67%);
						}
					}

					&:before {
						background: linear-gradient(to top,
							rgba(red(@hex-accent-yellow), green(@hex-accent-yellow), 
								blue(@hex-accent-yellow), 0.0),
							rgba(red(@hex-accent-yellow), green(@hex-accent-yellow), 
								blue(@hex-accent-yellow), 0.2) 50%,
							rgba(red(@hex-accent-yellow), green(@hex-accent-yellow), 
								blue(@hex-accent-yellow), 1) 80%);
					}
				}

				&.has-blue-bg {
					&:after {
						background: linear-gradient(to bottom,
							rgba(red(@hex-accent-blue), green(@hex-accent-blue), 
								blue(@hex-accent-blue), 0.0),
							rgba(red(@hex-accent-blue), green(@hex-accent-blue), 
								blue(@hex-accent-blue), 0.2) 50%,
							rgba(red(@hex-accent-blue), green(@hex-accent-blue), 
								blue(@hex-accent-blue), 1) 80%);

						@media all and (max-width: @large-mobile-screen-width) {
							background: linear-gradient(to bottom,
								rgba(red(@hex-accent-blue), green(@hex-accent-blue), 
									blue(@hex-accent-blue), 0.0),
								rgba(red(@hex-accent-blue), green(@hex-accent-blue), 
									blue(@hex-accent-blue), 0.2) 40%,
								rgba(red(@hex-accent-blue), green(@hex-accent-blue), 
									blue(@hex-accent-blue), 1) 67%);
						}
					}

					&:before {
						background: linear-gradient(to top,
							rgba(red(@hex-accent-blue), green(@hex-accent-blue), 
								blue(@hex-accent-blue), 0.0),
							rgba(red(@hex-accent-blue), green(@hex-accent-blue), 
								blue(@hex-accent-blue), 0.2) 50%,
							rgba(red(@hex-accent-blue), green(@hex-accent-blue), 
								blue(@hex-accent-blue), 1) 80%);
					}
				}

				&.has-green-bg {
					&:after {
						background: linear-gradient(to bottom,
							rgba(red(@hex-accent-green), green(@hex-accent-green), 
								blue(@hex-accent-green), 0.0),
							rgba(red(@hex-accent-green), green(@hex-accent-green), 
								blue(@hex-accent-green), 0.2) 50%,
							rgba(red(@hex-accent-green), green(@hex-accent-green), 
								blue(@hex-accent-green), 1) 80%);

						@media all and (max-width: @large-mobile-screen-width) {
							background: linear-gradient(to bottom,
								rgba(red(@hex-accent-green), green(@hex-accent-green), 
									blue(@hex-accent-green), 0.0),
								rgba(red(@hex-accent-green), green(@hex-accent-green), 
									blue(@hex-accent-green), 0.2) 40%,
								rgba(red(@hex-accent-green), green(@hex-accent-green), 
									blue(@hex-accent-green), 1) 67%);
						}
					}

					&:before {
						background: linear-gradient(to top,
							rgba(red(@hex-accent-green), green(@hex-accent-green), 
								blue(@hex-accent-green), 0.0),
							rgba(red(@hex-accent-green), green(@hex-accent-green), 
								blue(@hex-accent-green), 0.2) 50%,
							rgba(red(@hex-accent-green), green(@hex-accent-green), 
								blue(@hex-accent-green), 1) 80%);
					}
				}

				&.has-orange-bg {
					&:after {
						background: linear-gradient(to bottom,
							rgba(red(@hex-accent-orange), green(@hex-accent-orange), 
								blue(@hex-accent-orange), 0.0),
							rgba(red(@hex-accent-orange), green(@hex-accent-orange), 
								blue(@hex-accent-orange), 0.2) 50%,
							rgba(red(@hex-accent-orange), green(@hex-accent-orange), 
								blue(@hex-accent-orange), 1) 80%);

						@media all and (max-width: @large-mobile-screen-width) {
							background: linear-gradient(to bottom,
								rgba(red(@hex-accent-orange), green(@hex-accent-orange), 
									blue(@hex-accent-orange), 0.0),
								rgba(red(@hex-accent-orange), green(@hex-accent-orange), 
									blue(@hex-accent-orange), 0.2) 40%,
								rgba(red(@hex-accent-orange), green(@hex-accent-orange), 
									blue(@hex-accent-orange), 1) 67%);
						}
					}

					&:before {
						background: linear-gradient(to top,
							rgba(red(@hex-accent-orange), green(@hex-accent-orange), 
								blue(@hex-accent-orange), 0.0),
							rgba(red(@hex-accent-orange), green(@hex-accent-orange), 
								blue(@hex-accent-orange), 0.2) 50%,
							rgba(red(@hex-accent-orange), green(@hex-accent-orange), 
								blue(@hex-accent-orange), 1) 80%);
					}
				}

				&.has-cyan-bg {
					&:after {
						background: linear-gradient(to bottom,
							rgba(0, 173, 164, 0.0),
							rgba(0, 173, 164, 0.2) 50%,
							rgba(0, 173, 164, 1) 80%);

						@media all and (max-width: @large-mobile-screen-width) {
							background: linear-gradient(to bottom,
								rgba(0, 173, 164, 0.0),
								rgba(0, 173, 164, 0.2) 40%,
								rgba(0, 173, 164, 1) 67%);
						}
					}

					&:before {
						background: linear-gradient(to top,
							rgba(0, 173, 164, 0.0),
							rgba(0, 173, 164, 0.2) 50%,
							rgba(0, 173, 164, 1) 80%);
					}
				}
			}
		}

		&.thirds {
			.column {
				@media all {
					@media (max-width: (@large-mobile-screen-width)) {
						padding-bottom: ~"calc(40% - @{v-dflt-spcng}) !important";
					}
				}

				#binder.max-1386 & {
					@media all and (min-width: 1205px) {
						padding-bottom: 0 !important;
						height: 330px;
					}
				}
			}
		}

		&.quarters {
			.column {
				#binder.max-1386 & {
					@media all and (min-width: 1205px) {
						padding-bottom: 0 !important;
						height: 293px;
					}
				}
			}
		}

		&.has-title {
			margin-top: (@v-dflt-spcng * 3 / 2);

			.column:first-child {
				& > header:first-child {
					display: block;
					position: absolute;
					top: 0;
					left: 0;
					height: @v-dflt-spcng;
					border-bottom: 1px solid rgba(red(@hex-white), green(@hex-white), 
						blue(@hex-white), 0.7);
					background-color: @hex-dark-gray;
					.transform(~"translateY(-100%)");

					& > :first-child {
						margin: 0 !important;
						color: @hex-white;
						font-size: @column-fs;
						line-height: @v-dflt-spcng;
						text-align: center;
						text-transform: none;
					}
				}
			}

			&.halves {
				.column:first-child > header:first-child {
					@media all {
						@media (min-width: (@column-floating-threshold + 1)) {
							width: 200%;
						}

						@media (max-width: @column-floating-threshold) {
							width: 100%;
						}
					}
				}
			}

			&.thirds {
				.column:first-child > header:first-child {
					@media all {
						@media (min-width: (@column-floating-threshold + 1)) {
							width: 300%;
						}

						@media (max-width: @column-floating-threshold) {
							width: 100%;
						}
					}
				}
			}

			&.quarters {
				.column:first-child > header:first-child {
					@media all {
						@media (min-width: (@column-floating-threshold + 1)) {
							width: 400%;
						}

						@media (max-width: @column-floating-threshold) {
							width: 200%;
						}
					}
				}
			}
		}

		// TODO: move to UCORE custom file; it is unnecessary to include this in all OUE sites.
		&.for-faculty {
			&.has-title {
				&.quarters {
					margin-top: ~"calc(" (@v-dflt-spcng * 3 / 2) ~" + 10px)";

					.column:first-child > header:first-child {
						border-bottom: 10px solid rgba(red(@hex-white), green(@hex-white), 
							blue(@hex-white), 1);
					}
				}
			}

			.column {
				&:hover {
					background-size: auto 110%;
				}

				&:not(:first-child) {
					@media all {
						@media (min-width: (@column-floating-threshold + 1)) {
							border-left: 10px solid rgba(red(@hex-white), green(@hex-white), 
								blue(@hex-white), 1);
						}

						@media (max-width: @column-floating-threshold) {
							border-top: 10px solid rgba(red(@hex-white), green(@hex-white), 
								blue(@hex-white), 1);
						}
					}
				}

				&.has-black-bg {
					&:after {
						background: linear-gradient(to top,
							rgba(red(@hex-black), green(@hex-black), blue(@hex-black), 0.0),
							rgba(red(@hex-black), green(@hex-black), blue(@hex-black), 0.2) 50%,
							rgba(red(@hex-black), green(@hex-black), 
							blue(@hex-black), 0.7) 70%);

						@media all and (max-width: @large-mobile-screen-width) {
							background: linear-gradient(to top,
								rgba(red(@hex-black), green(@hex-black), blue(@hex-black), 0.0),
								rgba(red(@hex-black), green(@hex-black), 
									blue(@hex-black), 0.2) 40%,
								rgba(red(@hex-black), green(@hex-black), 
									blue(@hex-black), 0.7) 67%);
						}
					}

					&:before {
						background: linear-gradient(to top,
							rgba(red(@hex-crimson), green(@hex-crimson), 
								blue(@hex-crimson), 0.0),
							rgba(red(@hex-crimson), green(@hex-crimson), 
								blue(@hex-crimson), 0.2) 50%,
							rgba(red(@hex-crimson), green(@hex-crimson), 
								blue(@hex-crimson), 0.7) 70%);

						@media all and (max-width: @large-mobile-screen-width) {
							background: linear-gradient(to top,
								rgba(red(@hex-crimson), green(@hex-crimson), 
									blue(@hex-crimson), 0.0),
								rgba(red(@hex-crimson), green(@hex-crimson), 
									blue(@hex-crimson), 0.2) 40%,
								rgba(red(@hex-crimson), green(@hex-crimson), 
									blue(@hex-crimson), 0.7) 67%);
						}
					}
				}
			}

			& + &.thirds,
			& + &.quarters {
				border-top: 10px solid rgba(red(@hex-white), green(@hex-white), 
					blue(@hex-white), 1);
			}

			&.quarters {
				.column {
					@media all and (max-width: @column-floating-threshold) {
						background-size: auto 100%;

						&:hover {
							background-size: auto 110%;
						}

						&:nth-child(2) {
							border-top: none !important;
						}

						&:nth-child(3),
						&:nth-child(4) {
							border-top: 10px solid rgba(red(@hex-white), green(@hex-white), 
								blue(@hex-white), 1) !important;
						}

						&:nth-child(2),
						&:nth-child(4) {
							border-left: 10px solid rgba(red(@hex-white), green(@hex-white), 
								blue(@hex-white), 1) !important;
						}
					}
				}
			}
		}
	}
}


/**   ----------------------------------------------------------------------------------------------
***   §11: Accessibility friendly utility classes
**/

/**     ····························································································
***     >>> §11.1: Font-sizing variables for columns
**/

// TODO: Remove "body.use-a11y-styles" when no longer needed
@col--fSize-1: 1.125rem; // i.e., ~18px when root font size is 17px
@col--fSize-2: 1rem;
@col--fSize-3: .9412rem; // i.e., ~16px when root font size is 17px
@col--fSize-4: .8824rem; // i.e., ~15px when root font size is 17px
@col--fSize-5: .8236rem; // i.e., ~14px when root font size is 17px

// TODO: Use a guarded mixin to generate series of font-sizing utility classes.
// @col--fSize-array: ;

/**     ····························································································
***     >>> §11.2: Default font sizes for column elements
**/

.row {
	&.single .column,
	&.halves .column,
	&.quarters .column,
	&.side-right .column,
	&.side-left .column,
	&.thirds .column {
		font-size: @col--fSize-1;

		@media all{
			@media (max-width: @desktop-width) {
				font-size: @col--fSize-2;
			}

			@media (max-width: @tablet-screen-width) {
				font-size: @col--fSize-3;
			}
		}
	}
}
