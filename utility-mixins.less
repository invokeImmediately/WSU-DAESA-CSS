/** ────────────────────────────────────────────────────────────────────────────────────────────────
*** █  █▐▀█▀▌▀█▀ █    ▀█▀▐▀█▀▌█  █    ▐▀▄▀▌▀█▀▐▄ ▄▌▀█▀ ▐▀▀▄ ▄▀▀▀   █    █▀▀▀ ▄▀▀▀ ▄▀▀▀
*** █  █  █   █  █  ▄  █   █  ▀▄▄█ ▀▀ █ ▀ ▌ █   █   █  █  ▐ ▀▀▀█   █  ▄ █▀▀  ▀▀▀█ ▀▀▀█
***  ▀▀   █  ▀▀▀ ▀▀▀  ▀▀▀  █  ▄▄▄▀    █   ▀▀▀▀▐▀ ▀▌▀▀▀ ▀  ▐ ▀▀▀  ▀ ▀▀▀  ▀▀▀▀ ▀▀▀  ▀▀▀
***
*** Less import that defines a variety of utility mixins to be utilized in making focused,
***   functional style declarations and creating utility classes. Designed as a dependency to be
***   imported upstream of other Less files in the final stylesheet build.
***
*** @link https://github.com/invokeImmediately/WSU-DAESA-CSS/
*** @author Daniel Rieck [daniel.rieck@wsu.edu] (https://github.com/invokeImmediately)
*** @license MIT Copyright (c) 2021 Washington State University
***   Permission is hereby granted, free of charge, to any person obtaining a copy of this software
***     and associated documentation files (the "Software"), to deal in the Software without
***     restriction, including without limitation the rights to use, copy, modify, merge, publish,
***     distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom
***     the Software is furnished to do so, subject to the following conditions:
***   The above copyright notice and this permission notice shall be included in all copies or
***     substantial portions of the Software.
***   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
***     BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
***     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
***     CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
***     ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
***     SOFTWARE.
*** ────────────────────────────────────────────────────────────────────────────────────────────────
***  TABLE OF CONTENTS:
***  ────────────────────────────────────────────────────────────────────────────────────────────
***  §1: Display...............................................................................54
***  §2: Width.................................................................................68
***      >>> §2.1: In units of percentage......................................................72
***      >>> §2.2: In units of pixels.........................................................109
***  §3: Height...............................................................................150
***      >>> §3.1: In units of pixels.........................................................154
***  §4: Margins..............................................................................191
***      >>> §4.1: In units of "em"...........................................................195
***      >>> §4.2: In units of "rem"..........................................................284
***  §5: Spacing..............................................................................373
***      >>> §5.1: In units of "em"...........................................................377
***      >>> §5.2: In units of "rem"..........................................................408
***  §6: Padding..............................................................................439
***      >>> §6.1: In units of "em"...........................................................443
***      >>> §6.2: In units of "rem"..........................................................532
***  §7: Typography...........................................................................621
***      >>> §7.1: Typograhy: Font Sizing.....................................................625
***      >>> §7.2: Line heights...............................................................828
***      >>> §7.3: Bolding....................................................................893
***  §8: Functional CSS.......................................................................908
***      >>> §8.1: Card styling...............................................................912
***  ───────────────────────────────────────────────────────────────────────────────────────────────
**/

/** ================================================================================================
*** §1: Display
**/

.hidden--a11y-friendly() {
	border: none !important;
	display: block !important;
	height: 0 !important;
	margin: 0 !important;
	opacity: 0 !important;
	overflow: hidden !important;
	padding: 0 !important;
}

/** ================================================================================================
*** §2: Width
**/

/**   ----------------------------------------------------------------------------------------------
***   >>> §2.1: In units of percentages
**/

@pct-width-1: 5%;
@pct-width-2: 10%;
@pct-width-3: 15%;
@pct-width-4: 20%;
@pct-width-5: 25%;
@pct-width-6: 30%;
@pct-width-7: 33.33%;
@pct-width-8: 35%;
@pct-width-9: 40%;
@pct-width-10: 45%;
@pct-width-11: 50%;
@pct-width-12: 55%;
@pct-width-13: 60%;
@pct-width-14: 65%;
@pct-width-15: 66.66%;
@pct-width-16: 70%;
@pct-width-17: 75%;
@pct-width-18: 80%;
@pct-width-19: 85%;
@pct-width-20: 90%;
@pct-width-21: 95%;
@pct-width-22: 100%;

@pct-width-array: @pct-width-1, @pct-width-2, @pct-width-3, @pct-width-4, @pct-width-5,
	@pct-width-6, @pct-width-7, @pct-width-8, @pct-width-9, @pct-width-10, @pct-width-11,
	@pct-width-12, @pct-width-13, @pct-width-14, @pct-width-15, @pct-width-16, @pct-width-17,
	@pct-width-18, @pct-width-19, @pct-width-20, @pct-width-21, @pct-width-22;

.width--pct(@idx) when (isnumber(@idx)) and not (ispixel(@idx)) and not (ispercentage(@idx)) and
		(@idx <= length(@pct-width-array)) {
	width: extract(@pct-width-array, @idx);
}

/**   ----------------------------------------------------------------------------------------------
***   >>> §2.2: In units of pixels
**/

@pxl-width-1: 64px;
@pxl-width-2: 80px;
@pxl-width-3: 96px;
@pxl-width-4: 112px;
@pxl-width-5: 128px;
@pxl-width-6: 144px;
@pxl-width-7: 160px;
@pxl-width-8: 176px;
@pxl-width-9: 192px;
@pxl-width-10: 208px;
@pxl-width-11: 224px;
@pxl-width-12: 240px;
@pxl-width-13: 256px;
@pxl-width-14: 288px;
@pxl-width-15: 320px;
@pxl-width-16: 384px;
@pxl-width-17: 448px;
@pxl-width-18: 512px;
@pxl-width-19: 576px;
@pxl-width-20: 640px;
@pxl-width-21: 704px;
@pxl-width-22: 768px;
@pxl-width-23: 832px;
@pxl-width-24: 896px;
@pxl-width-25: 960px;

@pxl-width-array: @pxl-width-1, @pxl-width-2, @pxl-width-3, @pxl-width-4, @pxl-width-5,
	@pxl-width-6, @pxl-width-7, @pxl-width-8, @pxl-width-9, @pxl-width-10, @pxl-width-11,
	@pxl-width-12, @pxl-width-13, @pxl-width-14, @pxl-width-15, @pxl-width-16, @pxl-width-17,
	@pxl-width-18, @pxl-width-19, @pxl-width-20, @pxl-width-21, @pxl-width-22, @pxl-width-23,
	@pxl-width-24, @pxl-width-25;

.width--pxl(@idx) when (isnumber(@idx)) and not (ispixel(@idx)) and not (ispercentage(@idx)) and
		(@idx <= length(@pxl-width-array)) {
	width: extract(@pxl-width-array, @idx);
}

/** ================================================================================================
*** §3: Height
**/

/**   ----------------------------------------------------------------------------------------------
***   >>> §3.1: In units of pixels
**/

@pxl-height-1: 64px;
@pxl-height-2: 80px;
@pxl-height-3: 96px;
@pxl-height-4: 112px;
@pxl-height-5: 128px;
@pxl-height-6: 144px;
@pxl-height-7: 160px;
@pxl-height-8: 176px;
@pxl-height-9: 192px;
@pxl-height-10: 208px;
@pxl-height-11: 224px;
@pxl-height-12: 240px;
@pxl-height-13: 256px;
@pxl-height-14: 272px;
@pxl-height-15: 288px;
@pxl-height-16: 304px;
@pxl-height-17: 320px;
@pxl-height-18: 336px;
@pxl-height-19: 352px;
@pxl-height-20: 368px;
@pxl-height-21: 384px;
@pxl-height-22: 400px;

@pxl-height-array: @pxl-height-1, @pxl-height-2, @pxl-height-3, @pxl-height-4, @pxl-height-5,
	@pxl-height-6, @pxl-height-7, @pxl-height-8, @pxl-height-9, @pxl-height-10, @pxl-height-11,
	@pxl-height-12, @pxl-height-13, @pxl-height-14, @pxl-height-15, @pxl-height-16, @pxl-height-17,
	@pxl-height-18, @pxl-height-19, @pxl-height-20, @pxl-height-21, @pxl-height-22;

.height--pxl(@idx) when (isnumber(@idx)) and not (ispixel(@idx)) and not (ispercentage(@idx)) and
		(@idx <= length(@pxl-width-array)) {
	height: extract(@pxl-height-array, @idx);
}

/** ================================================================================================
*** §4: Margins
**/

/**   ----------------------------------------------------------------------------------------------
***   >>> §4.1: In units of "em"
**/

// Standard margin options in em units for all OUE websites
@mSize-1: 0em;
@mSize-2: 0.25em;
@mSize-3: 0.5em;
@mSize-4: 0.75em;
@mSize-5: 1em;
@mSize-6: 1.25em;
@mSize-7: 1.5em;
@mSize-8: 1.75em;
@mSize-9: 2em;
@mSize-10: 2.25em;
@mSize-11: 2.5em;
@mSize-12: 2.75em;
@mSize-13: 3em;
@mSize-14: 3.25em;
@mSize-15: 3.5em;
@mSize-16: 3.75em;
@mSize-17: 4em;

// OUE em margins array
@mSize-array: @mSize-1, @mSize-2, @mSize-3, @mSize-4, @mSize-5, @mSize-6, @mSize-7, @mSize-8,
	@mSize-9, @mSize-10, @mSize-11, @mSize-12, @mSize-13, @mSize-14, @mSize-15, @mSize-16,
	@mSize-17;

// Semantic em margins
@mSize-0mx: 1;
@mSize-250mx: 2;
@mSize-500mx: 3;
@mSize-750mx: 4;
@mSize-1000mx: 5;
@mSize-1250mx: 6;
@mSize-1500mx: 7;
@mSize-1750mx: 8;
@mSize-2000mx: 9;
@mSize-2250mx: 10;
@mSize-2500mx: 11;
@mSize-2750mx: 12;
@mSize-3000mx: 13;
@mSize-3250mx: 14;
@mSize-3500mx: 15;
@mSize-3750mx: 16;
@mSize-4000mx: 17;

// Utility mixins for defining margin sizes downstream.
.margin(@idx, @which-dir) when (isnumber(@idx)) and not (ispixel(@idx)) and
		not (ispercentage(@idx)) and (@idx <= length(@mSize-array)) and (isstring(@which-dir)) {
	.margin__parse-dir(@size, @dir) when (@dir = "all") {
		margin: @size;
	}

	.margin__parse-dir(@size, @dir) when (@dir = "bottom") {
		margin-bottom: @size;
	}

	.margin__parse-dir(@size, @dir) when (@dir = "left") {
		margin-left: @size;
	}

	.margin__parse-dir(@size, @dir) when (@dir = "right") {
		margin-right: @size;
	}

	.margin__parse-dir(@size, @dir) when (@dir = "top") {
		margin-top: @size;
	}

	.margin__parse-dir(@size, @dir) when not (@dir = "all") and not (@dir = "bottom") and
			not (@dir = "left") and not(@dir = "right") and not (@dir = "top") {
		/*! Less error: .margin__parse-dir => Invalid @dir */
	}

	@mSize__this: extract(@mSize-array, @idx);
	.margin__parse-dir(@mSize__this, @which-dir);
}

.margin(@idx, @which-dir) when not ((isnumber(@idx)) and not (ispixel(@idx)) and
		not (ispercentage(@idx)) and (@idx <= length(@mSize-array))) and (isstring(@which-dir)) {
	/*! Less error: .margin__parse-dir => Invalid @idx */
}

.margin(@idx, @which-dir) when (isnumber(@idx)) and not (ispixel(@idx)) and
		not (ispercentage(@idx)) and (@idx <= length(@mSize-array)) and not (isstring(@which-dir)) {
	/*! Less error: .margin__parse-dir => Invalid @which-dir */
}

/**   ----------------------------------------------------------------------------------------------
***   >>> §4.2: In units of "rem"
**/

// Standard margin options in rem units for all OUE websites.
@rem-mSize-1: 0rem;
@rem-mSize-2: 0.25rem;
@rem-mSize-3: 0.5rem;
@rem-mSize-4: 0.75rem;
@rem-mSize-5: 1rem;
@rem-mSize-6: 1.25rem;
@rem-mSize-7: 1.5rem;
@rem-mSize-8: 1.75rem;
@rem-mSize-9: 2rem;
@rem-mSize-10: 2.25rem;
@rem-mSize-11: 2.5rem;
@rem-mSize-12: 2.75rem;
@rem-mSize-13: 3rem;
@rem-mSize-14: 3.25rem;
@rem-mSize-15: 3.5rem;
@rem-mSize-16: 3.75rem;
@rem-mSize-17: 4rem;

// OUE rem margins array
@rem-mSize-array: @rem-mSize-1, @rem-mSize-2, @rem-mSize-3, @rem-mSize-4, @rem-mSize-5,
	@rem-mSize-6, @rem-mSize-7, @rem-mSize-8, @rem-mSize-9, @rem-mSize-10, @rem-mSize-11,
	@rem-mSize-12, @rem-mSize-13, @rem-mSize-14, @rem-mSize-15, @rem-mSize-16, @rem-mSize-17;

// Semantic rem margins
@rem-mSize-0mx: 1;
@rem-mSize-250mx: 2;
@rem-mSize-500mx: 3;
@rem-mSize-750mx: 4;
@rem-mSize-1000mx: 5;
@rem-mSize-1250mx: 6;
@rem-mSize-1500mx: 7;
@rem-mSize-1750mx: 8;
@rem-mSize-2000mx: 9;
@rem-mSize-2250mx: 10;
@rem-mSize-2500mx: 11;
@rem-mSize-2750mx: 12;
@rem-mSize-3000mx: 13;
@rem-mSize-3250mx: 14;
@rem-mSize-3500mx: 15;
@rem-mSize-3750mx: 16;
@rem-mSize-4000mx: 17;

// Utility mixins for defining margin sizes downstream.
.margins-rem(@idx, @which-dir) when (isnumber(@idx)) and not (ispixel(@idx)) and
		not (ispercentage(@idx)) and (@idx <= length(@rem-mSize-array)) and (isstring(@which-dir)) {
	.margins-rem__parse-dir(@size, @dir) when (@dir = "all") {
		margin: @size;
	}

	.margins-rem__parse-dir(@size, @dir) when (@dir = "bottom") {
		margin-bottom: @size;
	}

	.margins-rem__parse-dir(@size, @dir) when (@dir = "left") {
		margin-left: @size;
	}

	.margins-rem__parse-dir(@size, @dir) when (@dir = "right") {
		margin-right: @size;
	}

	.margins-rem__parse-dir(@size, @dir) when (@dir = "top") {
		margin-top: @size;
	}

	.margins-rem__parse-dir(@size, @dir) when not (@dir = "all") and not (@dir = "bottom") and
			not (@dir = "left") and not(@dir = "right") and not (@dir = "top") {
		/*! Less error: .margins-rem__parse-dir => Invalid @dir */
	}

	@rem-mSize__this: extract(@rem-mSize-array, @idx);
	.margins-rem__parse-dir(@rem-mSize__this, @which-dir);
}

.margins-rem(@idx, @which-dir) when not ((isnumber(@idx)) and not (ispixel(@idx)) and
		not (ispercentage(@idx)) and (@idx <= length(@mSize-array))) and (isstring(@which-dir)) {
	/*! Less error: .margins-rem__parse-dir => Invalid @idx */
}

.margins-rem(@idx, @which-dir) when (isnumber(@idx)) and not (ispixel(@idx)) and
		not (ispercentage(@idx)) and (@idx <= length(@mSize-array)) and not (isstring(@which-dir)) {
	/*! Less error: .margins-rem__parse-dir => Invalid @which-dir */
}

/** ================================================================================================
*** §5: Spacing
**/

/**   ----------------------------------------------------------------------------------------------
***   >>> §5.1: In units of "em"
**/

// Semantic em spacing sizes (based on @mSize-array)
@spacing-0mx: 1;
@spacing-250mx: 2;
@spacing-500mx: 3;
@spacing-750mx: 4;
@spacing-1000mx: 5;
@spacing-1250mx: 6;
@spacing-1500mx: 7;
@spacing-1750mx: 8;
@spacing-2000mx: 9;
@spacing-2250mx: 10;
@spacing-2500mx: 11;
@spacing-2750mx: 12;
@spacing-3000mx: 13;
@spacing-3250mx: 14;
@spacing-3500mx: 15;
@spacing-3750mx: 16;
@spacing-4000mx: 17;

// Utility mixin for defining spacing downstream.
.spacing(@idx) when (isnumber(@idx)) and not (ispercentage(@idx)) and
		(@idx <= length(@mSize-array)) {
	* + & {
		margin-top: extract(@mSize-array, @idx);
	}
}

/**   ----------------------------------------------------------------------------------------------
***   >>> §5.2: In units of "rem"
**/

// Semantic rem spacing sizes (based on @rem-mSize-array)
@rem-spacing-0mx: 1;
@rem-spacing-250mx: 2;
@rem-spacing-500mx: 3;
@rem-spacing-750mx: 4;
@rem-spacing-1000mx: 5;
@rem-spacing-1250mx: 6;
@rem-spacing-1500mx: 7;
@rem-spacing-1750mx: 8;
@rem-spacing-2000mx: 9;
@rem-spacing-2250mx: 10;
@rem-spacing-2500mx: 11;
@rem-spacing-2750mx: 12;
@rem-spacing-3000mx: 13;
@rem-spacing-3250mx: 14;
@rem-spacing-3500mx: 15;
@rem-spacing-3750mx: 16;
@rem-spacing-4000mx: 17;

// Utility mixin for defining spacing downstream.
.rem-spacing(@idx) when (isnumber(@idx)) and not (ispercentage(@idx)) and
		(@idx <= length(@rem-mSize-array)) {
	* + & {
		margin-top: extract(@rem-mSize-array, @idx);
	}
}

/** ================================================================================================
*** §6: Padding
**/

/**   ----------------------------------------------------------------------------------------------
***   >>> §6.1: In units of "em"
**/

// Standard padding options in em units for all OUE websites
@pSize-1: 0em;
@pSize-2: 0.25em;
@pSize-3: 0.5em;
@pSize-4: 0.75em;
@pSize-5: 1em;
@pSize-6: 1.25em;
@pSize-7: 1.5em;
@pSize-8: 1.75em;
@pSize-9: 2em;
@pSize-10: 2.25em;
@pSize-11: 2.5em;
@pSize-12: 2.75em;
@pSize-13: 3em;
@pSize-14: 3.25em;
@pSize-15: 3.5em;
@pSize-16: 3.75em;
@pSize-17: 4em;

// OUE em padding array
@pSize-array: @pSize-1, @pSize-2, @pSize-3, @pSize-4, @pSize-5, @pSize-6, @pSize-7, @pSize-8,
	@pSize-9, @pSize-10, @pSize-11, @pSize-12, @pSize-13, @pSize-14, @pSize-15, @pSize-16,
	@pSize-17;

// Semantic em padding
@pSize-0mx: 1;
@pSize-250mx: 2;
@pSize-500mx: 3;
@pSize-750mx: 4;
@pSize-1000mx: 5;
@pSize-1250mx: 6;
@pSize-1500mx: 7;
@pSize-1750mx: 8;
@pSize-2000mx: 9;
@pSize-2250mx: 10;
@pSize-2500mx: 11;
@pSize-2750mx: 12;
@pSize-3000mx: 13;
@pSize-3250mx: 14;
@pSize-3500mx: 15;
@pSize-3750mx: 16;
@pSize-4000mx: 17;

// Utility mixins for defining padding sizes downstream.
.padding(@idx, @which-dir) when (isnumber(@idx)) and not (ispixel(@idx)) and
		not (ispercentage(@idx)) and (@idx <= length(@pSize-array)) and (isstring(@which-dir)) {
	.padding__parse-dir(@size, @dir) when (@dir = "all") {
		padding: @size;
	}

	.padding__parse-dir(@size, @dir) when (@dir = "bottom") {
		padding-bottom: @size;
	}

	.padding__parse-dir(@size, @dir) when (@dir = "left") {
		padding-left: @size;
	}

	.padding__parse-dir(@size, @dir) when (@dir = "right") {
		padding-right: @size;
	}

	.padding__parse-dir(@size, @dir) when (@dir = "top") {
		padding-top: @size;
	}

	.padding__parse-dir(@size, @dir) when not (@dir = "all") and not (@dir = "bottom") and
			not (@dir = "left") and not(@dir = "right") and not (@dir = "top") {
		/*! Less error: .padding__parse-dir => Invalid @dir */
	}

	@pSize__this: extract(@pSize-array, @idx);
	.padding__parse-dir(@pSize__this, @which-dir);
}

.padding(@idx, @which-dir) when not ((isnumber(@idx)) and not (ispixel(@idx)) and
		not (ispercentage(@idx)) and (@idx <= length(@pSize-array))) and (isstring(@which-dir)) {
	/*! Less error: .padding__parse-dir => Invalid @idx */
}

.padding(@idx, @which-dir) when (isnumber(@idx)) and not (ispixel(@idx)) and
		not (ispercentage(@idx)) and (@idx <= length(@pSize-array)) and not (isstring(@which-dir)) {
	/*! Less error: .padding__parse-dir => Invalid @which-dir */
}

/**   ----------------------------------------------------------------------------------------------
***   >>> §6.2: In units of "rem"
**/

// Standard padding options in em units for all OUE websites
@pSize-1--rem: 0;
@pSize-2--rem: .25rem;
@pSize-3--rem: .5rem;
@pSize-4--rem: .75rem;
@pSize-5--rem: 1rem;
@pSize-6--rem: 1.25rem;
@pSize-7--rem: 1.5rem;
@pSize-8--rem: 1.75rem;
@pSize-9--rem: 2rem;
@pSize-10--rem: 2.25rem;
@pSize-11--rem: 2.5rem;
@pSize-12--rem: 2.75rem;
@pSize-13--rem: 3rem;
@pSize-14--rem: 3.25rem;
@pSize-15--rem: 3.5rem;
@pSize-16--rem: 3.75rem;
@pSize-17--rem: 4rem;

// OUE em padding array
@pSize-array--rem: @pSize-1--rem, @pSize-2--rem, @pSize-3--rem, @pSize-4--rem, @pSize-5--rem,
	@pSize-6--rem, @pSize-7--rem, @pSize-8--rem, @pSize-9--rem, @pSize-10--rem, @pSize-11--rem,
	@pSize-11--rem;

// Semantic em padding
@pSize-0mx--rem: 1;
@pSize-250mx--rem: 2;
@pSize-500mx--rem: 3;
@pSize-750mx--rem: 4;
@pSize-1000mx--rem: 5;
@pSize-1250mx--rem: 6;
@pSize-1500mx--rem: 7;
@pSize-1750mx--rem: 8;
@pSize-2000mx--rem: 9;
@pSize-2250mx--rem: 10;
@pSize-2500mx--rem: 11;
@pSize-2750mx--rem: 12;
@pSize-3000mx--rem: 13;
@pSize-3250mx--rem: 14;
@pSize-3500mx--rem: 15;
@pSize-3750mx--rem: 16;
@pSize-4000mx--rem: 17;

// Utility mixins for defining padding sizes downstream.
.padding--rem(@idx, @whi1ch-dir) when (isnumber(@idx)) and not (ispixel(@idx)) and
		not (ispercentage(@idx)) and (@idx <= length(@pSize-array)) and (isstring(@which-dir)) {
	.padding--rem__parse-dir(@size, @dir) when (@dir = "all") {
		padding: @size;
	}

	.padding--rem__parse-dir(@size, @dir) when (@dir = "bottom") {
		padding-bottom: @size;
	}

	.padding--rem__parse-dir(@size, @dir) when (@dir = "left") {
		padding-left: @size;
	}

	.padding--rem__parse-dir(@size, @dir) when (@dir = "right") {
		padding-right: @size;
	}

	.padding--rem__parse-dir(@size, @dir) when (@dir = "top") {
		padding-top: @size;
	}

	.padding--rem__parse-dir(@size, @dir) when not (@dir = "all") and not (@dir = "bottom") and
			not (@dir = "left") and not(@dir = "right") and not (@dir = "top") {
		/*! Less error: .padding--rem__parse-dir => Invalid @dir */
	}

	@pSize__this: extract(@pSize-array--rem, @idx);
	.padding--rem__parse-dir(@pSize__this, @which-dir);
}

.padding--rem(@idx, @which-dir) when not ((isnumber(@idx)) and not (ispixel(@idx)) and
		not (ispercentage(@idx)) and (@idx <= length(@pSize-array))) and (isstring(@which-dir)) {
	/*! Less error: .padding--rem__parse-dir => Invalid @idx */
}

.padding--rem(@idx, @which-dir) when (isnumber(@idx)) and not (ispixel(@idx)) and
		not (ispercentage(@idx)) and (@idx <= length(@pSize-array)) and not (isstring(@which-dir)) {
	/*! Less error: .padding--rem__parse-dir => Invalid @which-dir */
}

/** ================================================================================================
*** §7: Typography
**/

/**   ----------------------------------------------------------------------------------------------
***   >>> §7.1: Font Sizing
**/

// Standard font-sizing options for all OUE websites.
@fSize-1: 0.4em;
@fSize-2: 0.425em;
@fSize-3: 0.45em;
@fSize-4: 0.475em;
@fSize-5: 0.5em;
@fSize-6: 0.525em;
@fSize-7: 0.55em;
@fSize-8: 0.575em;
@fSize-9: 0.6em;
@fSize-10: 0.625em;
@fSize-11: 0.65em;
@fSize-12: 0.675em;
@fSize-13: 0.7em;
@fSize-14: 0.725em;
@fSize-15: 0.75em;
@fSize-16: 0.775em;
@fSize-17: 0.8em;
@fSize-18: 0.825em;
@fSize-19: 0.85em;
@fSize-20: 0.875em;
@fSize-21: 0.9em;
@fSize-22: 0.925em;
@fSize-23: 0.95em;
@fSize-24: 0.975em;
@fSize-25: 1em;
@fSize-26: 1.025em;
@fSize-27: 1.05em;
@fSize-28: 1.075em;
@fSize-29: 1.1em;
@fSize-30: 1.125em;
@fSize-31: 1.15em;
@fSize-32: 1.175em;
@fSize-33: 1.2em;
@fSize-34: 1.225em;
@fSize-35: 1.25em;
@fSize-36: 1.275em;
@fSize-37: 1.3em;
@fSize-38: 1.325em;
@fSize-39: 1.35em;
@fSize-40: 1.375em;
@fSize-41: 1.4em;
@fSize-42: 1.425em;
@fSize-43: 1.45em;
@fSize-44: 1.475em;
@fSize-45: 1.5em;
@fSize-46: 1.525em;
@fSize-47: 1.55em;
@fSize-48: 1.575em;
@fSize-49: 1.6em;
@fSize-50: 1.625em;
@fSize-51: 1.65em;
@fSize-52: 1.675em;
@fSize-53: 1.7em;
@fSize-54: 1.725em;
@fSize-55: 1.75em;
@fSize-56: 1.775em;
@fSize-57: 1.8em;
@fSize-58: 1.825em;
@fSize-59: 1.85em;
@fSize-60: 1.875em;
@fSize-61: 1.9em;
@fSize-62: 1.925em;
@fSize-63: 1.95em;
@fSize-64: 1.975em;
@fSize-65: 2em;
@fSize-66: 2.025em;
@fSize-67: 2.05em;
@fSize-68: 2.075em;
@fSize-69: 2.1em;
@fSize-70: 2.125em;
@fSize-71: 2.15em;
@fSize-72: 2.175em;
@fSize-73: 2.2em;
@fSize-74: 2.225em;
@fSize-75: 2.25em;
@fSize-76: 2.275em;
@fSize-77: 2.3em;
@fSize-78: 2.325em;
@fSize-79: 2.35em;
@fSize-80: 2.375em;
@fSize-81: 2.4em;

// OUE font-sizing array.
@fSize-array: @fSize-1, @fSize-2, @fSize-3, @fSize-4, @fSize-5, @fSize-6, @fSize-7, @fSize-8,
	@fSize-9, @fSize-10, @fSize-11, @fSize-12, @fSize-13, @fSize-14, @fSize-15, @fSize-16,
	@fSize-17, @fSize-18, @fSize-19, @fSize-20, @fSize-21, @fSize-22, @fSize-23, @fSize-24,
	@fSize-25, @fSize-26, @fSize-27, @fSize-28, @fSize-29, @fSize-30, @fSize-31, @fSize-32,
	@fSize-33, @fSize-34, @fSize-35, @fSize-36, @fSize-37, @fSize-38, @fSize-39, @fSize-40,
	@fSize-41, @fSize-42, @fSize-43, @fSize-44, @fSize-45, @fSize-46, @fSize-47, @fSize-48,
	@fSize-49, @fSize-50, @fSize-51, @fSize-52, @fSize-53, @fSize-54, @fSize-55, @fSize-56,
	@fSize-57, @fSize-58, @fSize-59, @fSize-60, @fSize-61, @fSize-62, @fSize-63, @fSize-64,
	@fSize-65, @fSize-66, @fSize-67, @fSize-68, @fSize-69, @fSize-70, @fSize-71, @fSize-72,
	@fSize-73, @fSize-74, @fSize-75, @fSize-76, @fSize-77, @fSize-78, @fSize-79, @fSize-80,
	@fSize-81;

// Semantic font-sizing Less variables: Miscellaneous
@fSize--min: 1;
@fSize--body-text: ceil(unit(@v-p-sz - extract(@fSize-array,1)) / unit(extract(@fSize-array,2)
	- extract(@fSize-array,1))) + 1;
@fSize--max: length(@fSize-array);

// Semantic font-sizing Less variables: Units of mx
@fSize-400mx: 1;
@fSize-425mx: 2;
@fSize-450mx: 3;
@fSize-475mx: 4;
@fSize-500mx: 5;
@fSize-525mx: 6;
@fSize-550mx: 7;
@fSize-575mx: 8;
@fSize-600mx: 9;
@fSize-625mx: 10;
@fSize-650mx: 11;
@fSize-675mx: 12;
@fSize-700mx: 13;
@fSize-725mx: 14;
@fSize-750mx: 15;
@fSize-775mx: 16;
@fSize-800mx: 17;
@fSize-825mx: 18;
@fSize-850mx: 19;
@fSize-875mx: 20;
@fSize-900mx: 21;
@fSize-925mx: 22;
@fSize-950mx: 23;
@fSize-975mx: 24;
@fSize-1000mx: 25;
@fSize-1025mx: 26;
@fSize-1050mx: 27;
@fSize-1075mx: 28;
@fSize-1100mx: 29;
@fSize-1125mx: 30;
@fSize-1150mx: 31;
@fSize-1175mx: 32;
@fSize-1200mx: 33;
@fSize-1225mx: 34;
@fSize-1250mx: 35;
@fSize-1275mx: 36;
@fSize-1300mx: 37;
@fSize-1325mx: 38;
@fSize-1350mx: 39;
@fSize-1375mx: 40;
@fSize-1400mx: 41;
@fSize-1425mx: 42;
@fSize-1450mx: 43;
@fSize-1475mx: 44;
@fSize-1500mx: 45;
@fSize-1525mx: 46;
@fSize-1550mx: 47;
@fSize-1575mx: 48;
@fSize-1600mx: 49;
@fSize-1625mx: 50;
@fSize-1650mx: 51;
@fSize-1675mx: 52;
@fSize-1700mx: 53;
@fSize-1725mx: 54;
@fSize-1750mx: 55;
@fSize-1775mx: 56;
@fSize-1800mx: 57;
@fSize-1825mx: 58;
@fSize-1850mx: 59;
@fSize-1875mx: 60;
@fSize-1900mx: 61;
@fSize-1925mx: 62;
@fSize-1950mx: 63;
@fSize-1975mx: 64;
@fSize-2000mx: 65;
@fSize-2025mx: 66;
@fSize-2050mx: 67;
@fSize-2075mx: 68;
@fSize-2100mx: 69;
@fSize-2125mx: 70;
@fSize-2150mx: 71;
@fSize-2175mx: 72;
@fSize-2200mx: 73;
@fSize-2225mx: 74;
@fSize-2250mx: 75;
@fSize-2275mx: 76;
@fSize-2300mx: 77;
@fSize-2325mx: 78;
@fSize-2350mx: 79;
@fSize-2375mx: 80;
@fSize-2400mx: 81;

// Semantic font-sizing Less variables: With reference to heading sizes
@h1-font-size: @fSize-2400mx;
@h2-font-size: @fSize-2100mx;
@h3-font-size: @fSize-1800mx;
@h4-font-size: @fSize-1600mx;
@h5-font-size: @fSize-1500mx;
@h6-font-size: @fSize-1400mx;

// Utility mixin for defining font sizes downstream.
.font-size(@idx) when (isnumber(@idx)) and not (ispixel(@idx)) and not (ispercentage(@idx))
		and (@idx <= length(@fSize-array)) {
	font-size: extract(@fSize-array, @idx);
}

/**   ----------------------------------------------------------------------------------------------
***   >>> §7.2: Line heights
**/

// Standard line-height options for all OUE websites.
@lHeight-1: 1em;
@lHeight-2: 1.05em;
@lHeight-3: 1.1em;
@lHeight-4: 1.15em;
@lHeight-5: 1.2em;
@lHeight-6: 1.25em;
@lHeight-7: 1.3em;
@lHeight-8: 1.35em;
@lHeight-9: 1.4em;
@lHeight-10: 1.45em;
@lHeight-11: 1.5em;
@lHeight-12: 1.55em;
@lHeight-13: 1.6em;
@lHeight-14: 1.65em;
@lHeight-15: 1.7em;
@lHeight-16: 1.75em;
@lHeight-17: 1.8em;
@lHeight-18: 1.85em;
@lHeight-19: 1.9em;
@lHeight-20: 1.95em;
@lHeight-21: 2em;

// OUE font-sizing array.
@lHeight-array: @lHeight-1, @lHeight-2, @lHeight-3, @lHeight-4, @lHeight-5, @lHeight-6, @lHeight-7,
	@lHeight-8, @lHeight-9, @lHeight-10, @lHeight-11, @lHeight-12, @lHeight-13, @lHeight-14,
	@lHeight-15, @lHeight-16, @lHeight-17, @lHeight-18, @lHeight-19, @lHeight-20, @lHeight-21;

// Semantic font-sizing Less variables.
@lHeight--min: 1;
@lHeight--body-text: ceil(unit(@body-text--lHeight - extract(@lHeight-array,1)) /
	unit(extract(@lHeight-array,2) - extract(@lHeight-array,1))) + 1;
@lHeight--max: length(@lHeight-array);
@lHeight-667mx: 1;
@lHeight-700mx: 2;
@lHeight-733mx: 3;
@lHeight-767mx: 4;
@lHeight-800mx: 5;
@lHeight-833mx: 6;
@lHeight-867mx: 7;
@lHeight-900mx: 8;
@lHeight-933mx: 9;
@lHeight-967mx: 10;
@lHeight-1000mx: 11;
@lHeight-1033mx: 12;
@lHeight-1067mx: 13;
@lHeight-1100mx: 14;
@lHeight-1133mx: 15;
@lHeight-1167mx: 16;
@lHeight-1200mx: 17;
@lHeight-1233mx: 18;
@lHeight-1267mx: 19;
@lHeight-1300mx: 20;
@lHeight-1333mx: 21;

// Utility mixin for defining font sizes downstream.
.line-height(@idx) when (isnumber(@idx)) and not (ispixel(@idx)) and not (ispercentage(@idx))
		and (@idx <= length(@lHeight-array)) {
	line-height: extract(@lHeight-array, @idx);
}

/**   ----------------------------------------------------------------------------------------------
***   >>> §7.3: Bolding
**/

@fWeight-light: 300;
@fWeight-normal: 400;
@fWeight-semi-bold: 600;
@fWeight-bold: 700;
@fWeight-extra-bold: 800;

.font-weight(@weight) when (isnumber(@weight)) and not (ispixel(@weight))
		and not (ispercentage(@weight)) {
	font-weight: @weight;
}

/** ================================================================================================
*** §8: Functional CSS
**/

/**   ----------------------------------------------------------------------------------------------
***   >>> §8.1: Card styling
**/

@style--card__border-radius: 5px;

.style--card__() {
	border-radius: @style--card__border-radius;
	box-sizing: border-box;
	padding: extract(@pSize-array--rem, @pSize-500mx--rem);
}

.style--card--flat__() {
	.getRgbaForProp(returned, extract(@colors--grays__hex, @colors__darkest), 0.03);
	.getRgbaForProp(returned-2, extract(@colors--grays__hex, @colors__darkest), 0.02);
	box-shadow: 0 12px 16px 2px @returned, 0 5px 22px 4px @returned, 0 6px 13px 0 @returned-2;
	.style--card__();
}

.style--card--raised__() {
	.getRgbaForProp(returned, extract(@colors--grays__hex, @colors__dark), 0.15);
	.getRgbaForProp(returned-2, extract(@colors--grays__hex, @colors__darkest), 0.03);
	.getRgbaForProp(returned-3, extract(@colors--grays__hex, @colors__darkest), 0.02);
	border: 1px solid @returned;
	box-shadow: 0 12px 16px 2px @returned-2, 0 5px 22px 4px @returned-2, 0 6px 13px 0 @returned-3;
	.style--card__();
}

.style--card__title__() {
	color: extract(@colors--grays__hex, @colors__darker);
	margin-left: -1 * extract(@rem-mSize-array, @rem-mSize-500mx);
	margin-right: -1 * extract(@rem-mSize-array, @rem-mSize-500mx);
	padding: extract(@pSize-array--rem, @pSize-250mx--rem) extract(@pSize-array--rem,
		@pSize-500mx--rem);

	&:first-child {
		border-top-left-radius: (@style--card__border-radius - 1);
		border-top-right-radius: (@style--card__border-radius - 1);
		margin-top: -1 * extract(@rem-mSize-array, @rem-mSize-500mx);
	}
}

.style--card__sub-title__() {
	background-color: extract(@colors--grays__hex, @colors__darkish);
	color: extract(@colors--grays__hex, @colors__accent);
	.font-size(@fSize-1100mx);
	font-weight: 700;
	.ff--condensed;
	.margin(@mSize-0mx, "bottom");
	.margin(@mSize-0mx, "top");
	margin-left: -1 * extract(@rem-mSize-array, @rem-mSize-500mx);
	margin-right: -1 * extract(@rem-mSize-array, @rem-mSize-500mx);
	letter-spacing: 1px;
	padding: extract(@pSize-array--rem, @pSize-250mx--rem) extract(@pSize-array--rem,
		@pSize-500mx--rem);
	word-spacing: 1px;
}
