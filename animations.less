.animation(@name; @duration:0s; @timing: linear; @delay: 0s; @iterations: infinite) when (@name = none) and (@delay = 0s) {
    -webkit-animation: @name;
       -moz-animation: @name;
         -o-animation: @name;
            animation: @name;
}

.animation(@name; @duration:0s; @timing: linear; @delay: 0s; @iterations: infinite) when not (@name = none) and (@delay = 0s) {
    -webkit-animation: @name @duration @timing @iterations;
       -moz-animation: @name @duration @timing @iterations;
         -o-animation: @name @duration @timing @iterations;
            animation: @name @duration @timing @iterations;
}

.animation(@name; @duration:0s; @timing: linear; @delay: 0s; @iterations: infinite) when not (@name = none) and not (@delay = 0s) {
    -webkit-animation: @name @duration @timing @iterations;
       -moz-animation: @name @duration @timing @iterations;
         -o-animation: @name @duration @timing @iterations;
            animation: @name @duration @timing @iterations;
    -webkit-animation-delay: @delay;
       -moz-animation-delay: @delay;
         -o-animation-delay: @delay;
            animation-delay: @delay;
}

.keyframes(@name; @ruleset) {
    @-webkit-keyframes @name { @ruleset(); }
    @-moz-keyframes @name { @ruleset(); }
    @-o-keyframes @name { @ruleset(); }
    @keyframes @name { @ruleset(); }
}

.transform(@operations) {
    -webkit-transform: @operations;
       -moz-transform: @operations;
         -o-transform: @operations;
            transform: @operations;
}

.transition(@parameters) {
    -webkit-transition: @parameters;
       -moz-transition: @parameters;
         -o-transition: @parameters;
            transition: @parameters;
}

@rules-fade-in-from-left: {
    0% {
        opacity: 0;
        .transform(translate3d(-100%,0,0));
    }        
    100% {
        opacity: 1;
        .transform(none);
    }
};

@rules-fade-in-from-right: {
    0% {
        opacity: 0;
        transform: translate3d(100%,0,0);
         -webkit-transform: translate3d(100%,0,0);
         -moz-transform: translate3d(100%,0,0);
         -o-transform: translate3d(100%,0,0);
    }
    100% {
        opacity: 1;
        transform: none;
         -webkit-transform: none;
         -moz-transform: none;
         -o-transform: none;
    }
};

@rules-flash-highlight: {
    0% {
        .rgb-light-crimson(); background-color: rgba(@rval,@gval,@bval,0);
        border-color: rgba(@rval,@gval,@bval,0);
        z-index: 10;
    }
    10% {
        .rgb-light-crimson(); background-color: rgba(@rval,@gval,@bval,0.1);
        border-color: rgba(@rval,@gval,@bval,0.5);
    }
    20% {
        .rgb-light-crimson(); background-color: rgba(@rval,@gval,@bval,0);
        border-color: rgba(@rval,@gval,@bval,0);
    }
    31% {
        .rgb-light-crimson(); background-color: rgba(@rval,@gval,@bval,0.1);
        border-color: rgba(@rval,@gval,@bval,0.5);
    }
    41% {
        .rgb-light-crimson(); background-color: rgba(@rval,@gval,@bval,0);
        border-color: rgba(@rval,@gval,@bval,0);
    }
    51% {
        .rgb-light-crimson(); background-color: rgba(@rval,@gval,@bval,0.1);
        border-color: rgba(@rval,@gval,@bval,0.5);
    }
    100% {
        .rgb-light-crimson(); background-color: rgba(@rval,@gval,@bval,0);
        border-color: rgba(@rval,@gval,@bval,0);
    }
};

//TODO: Rename to correct color!
@rules-orange-glow: {
    0% {
        .rgb-accent-yellow(); background-color: rgba(@rval,@gval,@bval,0.25);
        box-shadow: 0 0 9px rgba(@rval,@gval,@bval,0);
        color: @hex-dark-gray;
    }
    50% {
        .rgb-accent-yellow(); background-color: rgba(@rval,@gval,@bval,0.5);
        box-shadow: 0 0 18px rgba(@rval,@gval,@bval,0.5);
        color: @hex-darkest-gray;
    }
    100% {
        .rgb-accent-yellow(); background-color: rgba(@rval,@gval,@bval,0.25);
        box-shadow: 0 0 9px rgba(@rval,@gval,@bval,0);
    }
};