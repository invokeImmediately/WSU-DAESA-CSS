/** ┌──────────────────────────────────────────────────────────────────────────────────────────────┐
*** │ FILENAME: css-build-entry-point.less                                                         │
*** │                                                                                              │
*** │ SUMMARY: Entry point for including dependencies utilized in building custom stylesheets that │
*** │  are common to all websites designed, built, and maintained by the Divsion of Academic       │
*** │  Engagement and Student Achievement (DAESA) in the Office of the Provost at Washington State │
*** │  University (WSU).                                                                           │
*** │                                                                                              │
*** │ DESCRIPTION: See §1 for a full description of the contents of this file.                     │
*** │                                                                                              │
*** │ AUTHOR: Daniel Rieck [daniel.rieck@wsu.edu] (https://github.com/invokeImmediately)           │
*** │                                                                                              │
*** │ LICENSE: MIT — Copyright (c) 2020 Washington State University. (See §1 for full license      │
*** │    text.)                                                                                    │
*** └──────────────────────────────────────────────────────────────────────────────────────────────┘
***  TABLE OF CONTENTS:
***  ────────────────────────────────────────────────────────────────────────────────────────────
***  §1: Persistent comment for documenting general DAESA styling section of stylesheet........71
***  §2:  Global Less variables and Less mixins/utility classes...............................165
***    >>> §2.1: Additional fonts.............................................................169
***    >>> §2.2: Color variables and mixins...................................................175
***    >>> §2.3: Miscellaneous mixins.........................................................181
***    >>> §2.4: Utility mixins...............................................................187
***    >>> §2.5: Animation utility classes....................................................193
***  §3: Anchor pseudoclass...................................................................199
***  §4: Document section nodes...............................................................205
***    >>> §4.1: HTML element.................................................................209
***    >>> §4.2: Body element.................................................................217
***    >>> §4.3: Article elements.............................................................235
***    >>> §4.4: Section elements.............................................................241
***    >>> §4.5: Aside elements...............................................................249
***    >>> §4.6: Heading elements.............................................................255
***    >>> §4.7: Header elements..............................................................261
***    >>> §4.8: Footer elements..............................................................267
***  §5: Content grouping nodes...............................................................279
***    >>> §5.1: Paragraph elements...........................................................283
***    >>> §5.2: Hr elements..................................................................289
***    >>> §5.3: List elements................................................................295
***    >>> §5.4: Div elements.................................................................301
***       └> §5.4.1: News posts...............................................................315
***       └> §5.4.2: Banner slideshows........................................................326
***       └> §5.4.3: Columns..................................................................332
***       └> §5.4.4: Flippable content panels.................................................338
***       └> §5.4.5: Page covering notices....................................................344
***       └> §5.4.6: Recent updates...........................................................350
***    >>> §5.5: Main element.................................................................356
***  §6: Text-level nodes.....................................................................362
***    >>> §6.1: Hyperlink elements...........................................................366
***    >>> §6.2: Strong elements..............................................................372
***    >>> §6.3: Mark elements................................................................391
***    >>> §6.4: Span elements................................................................401
***    >>> §6.5: Cite elements................................................................407
***  §7: Embedded content nodes...............................................................415
***    >>> §7.1: Image elements...............................................................419
***    >>> §7.2: Iframe elements..............................................................425
***  §8: Tabular data nodes...................................................................431
***  §9: Form nodes...........................................................................437
***  §10: Scripted elements...................................................................443
***    >>> §10.1: Toggled drop-down panels....................................................447
***    >>> §10.2: Subtle panels...............................................................453
***    >>> §10.3: Flippable content panels....................................................494
***    >>> §10.4: QTip driven tooltips........................................................503
***    >>> §10.5: Quick-tabs panels...........................................................509
***    >>> §10.6: Trive Events Calendars......................................................515
***    >>> §10.7: Auto-scrolling image panels.................................................521
***  §11: Functional CSS......................................................................549
***    >>> §11.1: Website notices.............................................................553
***    >>> §11.2: Other components............................................................559
***  §12: Utility classes.....................................................................565
***  ───────────────────────────────────────────────────────────────────────────────────────────────
**/

/** ================================================================================================
*** §1: Persistent comment for documenting general DAESA styling section of stylesheet
**/

/*! ================================================================================================
*** Styling Applied to All DAESA Websites
*** ================================================================================================
*** SUMMARY: The following section of this stylesheet contains CSS code written for use on all
***   websites designed, built, and maintained by the Divsion of Academic Engagement and Student
***   Achievement (DAESA) in the Office of the Provost at Washington State University (WSU).
***
*** DESCRIPTION: The CSS code in the following section was generated from precompiled CSS written in
***   the Less language extension of CSS. It is designed to be applied via the WSUWP CSS Stylesheet
***   Editor functioning in add-on mode.
***
***   Please refer to the GitHub proejct at https://github.com/invokeImmediately/WSU-UE---CSS/ for
***   fully documented, precompiled source code.  
***     
*** AUTHOR: Daniel Rieck [daniel.rieck@wsu.edu] (https://github.com/invokeImmediately)
***
*** LICENSE: MIT — Copyright (c) 2020 Washington State University.
***
***   Permission is hereby granted, free of charge, to any person obtaining a copy of this software
***   and associated documentation files (the “Software”), to deal in the Software without
***   restriction, including without limitation the rights to use, copy, modify, merge, publish,
***   distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the
***   Software is furnished to do so, subject to the following conditions:
***
***   The above copyright notice and this permission notice shall be included in all copies or
***   substantial portions of the Software.
***
***   THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
***   BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
***   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
***   DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
***   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*** ================================================================================================
**/

/** ───────────────────────────────────────────────────────────────────────────────────────────────
*** ADDITIONAL DESIGN COMMENTS
*** ────────────────────────────────────────────────────────────────────────────────────────────
*** DESIGN PHILOSOPHY: I and the rest of the WSU DAESA design team feels the Spine theme represents
***   a decent starting point for creating a branded academic website for a WSU unit or program. The
***   theme is meant to be unobtrusive enough to be easily customized with additional CSS code to
***   create branding for the unit/program that depends on it. However, I see several gaps in its
***   responsive and accessibility design, and addressing these gaps would significantly enhance the
***   quality of the theme. This has led our team to choose a strategy of adopting the theme and
***   overriding and extending its design where beneficial to create our branded unit and program
***   websites.
***
***   To achieve this strategy, I designed this stylesheet to mix CSS code written according to
***   SMACSS, BEM, and functional/atomic CSS paradigms to provide this customization and
***   gap-addressing enhancement of design. In general, SMACSS is used to write style rules that
***   override behaviors from style rules declared in the Spine theme's basal source files that we
***   want to improve upon. The BEM paradigm is used to write rules for displaying new, complex
***   components that meet specific design needs of DAESA content creators that are not better met
***   by what the Spine theme provides. Finally, functional CSS is employed to provide a libary of
***   simple classes that can be leveraged to tweak how a DAESA web page's components are being
***   displayed without the need to write more custom CSS.
***
***   Specifically, SMACSS is utilized in this stylesheet because the Spine theme for WSUWP itself
***   takes a SMACSS style approach to its design. Specifically, style rules are declared in
***   spine.min.css that operate at base, layout, and modular levels. Consequently, this add-on,
***   downsteam style sheet necessarily contains styling written according to the same paradigm in
***   order to override or minimally build upon the default design imposed by the Spine Builder
***   theme. This overriding approach is optimal in our case because our DAESA design team operates
***   under business conditions where obtaining our own servers, writing our own child theme, and
***   maintaining our own WordPress installation incurs more costs compared to the benefits it would
***   provide.
***
***   The BEM paradigm is used to write style rules as needed for more complex components of DAESA
***   websites, including gravity forms. BM is utilized because of the simple way it: 1) achieves a
***   readable structure, 2) promotes modularity by minimizing unnecessary specificity and
***   collisions from cascading, and 3) produces resusable code by requiring the independent
***   development of style rules for each block. Moreover, I do not mind the increased application
***   of long class names to HTML tags that is associated with this paradigm because the class names
***   are so meaningful. I find they enable a web devloper or designer to immediately grasp how
***   the tag they are applied to will be styled just from reading the web page's source code.
***
***   Classes written according to a functional/atomic CSS paradigm have also been added to this
***   stylesheet to further extend the Spine theme's design flexibility for content creators on
***   DAESA websites. Through focused, durable atomic CSS classes, content authors are enabled more
***   options for tweaking the layout and apperance of their content needs without needing to write
***   additional CSS or clutter markup tags with undesirable style attribute settings.
***
*** ORGANIZATION OF STYLESHEET: This stylesheet is organized such that semantic CSS preceeds
***   functional CSS. This is done to ensure that utility classes associated with functional CSS
***   override all other behaviors.
***
***   The semantic styling section of this stylesheet is laid out according to the W3C HTML5
***   language specification (please see https://www.w3.org/TR/html5/ for more information). Style
***   rules are generally declared in the same sequence as their matching elements appear in the
***   HTML5 spec. Moreover, property settings are generally made in alphabetical order within a
***   declaration to make the code more predictable an thereby easier to read.
*** ───────────────────────────────────────────────────────────────────────────────────────────────
**/

/** ================================================================================================
*** §2:  Global Less variables and Less mixins/utility classes
**/

/**   ----------------------------------------------------------------------------------------------
***   >>> §2.1: Additional fonts
**/

@import "fonts.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §2.2: Color variables and mixins
**/

@import "color-palette.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §2.3: Miscellaneous mixins
**/

@import "mixins.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §2.4: Utility mixins
**/

@import "utility-mixins.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §2.5: Animation utility classes
**/

@import "animations.less";

/** ================================================================================================
*** §3: Anchor pseudoclass
**/

@import "targets.less";

/** ================================================================================================
*** §4: Document section nodes
**/

/**   ----------------------------------------------------------------------------------------------
***   >>> §4.1: HTML element
**/

html {
    font-size: @root-font-size;
}

/**  ----------------------------------------------------------------------------------------------
***   >>> §4.2: Body element
**/

body {
    &:extend(.ff--sans);
	&.use-max-width-1386 {
		#binder.max-1188 {
			@media only screen and (min-width: 990px) {
				max-width: 1386px;
				.row {
					max-width: 1386px;
				}
			}
		}
	}
}

/**   ----------------------------------------------------------------------------------------------
***   >>> §4.3: Article elements
**/

@import "articles.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §4.4: Section elements
**/

@import "sections.less";

@import "on-this-page.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §4.5: Aside elements
**/

@import "asides.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §4.6: Heading elements
**/

@import "headings.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §4.7: Header elements
**/

@import "headers.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §4.8: Footer elements
**/

footer.article-footer {
    div.author-info {
        display: none;
    }
}

@import "footers.less";

/** ================================================================================================
*** §5: Content grouping nodes
**/

/**   ----------------------------------------------------------------------------------------------
***   >>> §5.1: Paragraph elements
**/

@import "paragraphs.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §5.2: Hr elements
**/

@import "horizontal-rules.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §5.3: List elements
**/

@import "lists.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §5.4: Div elements
**/

@oue-div-ruleset: {
	.column {
		& > * + div {
			margin-top: extract(@mSize-array, @spacing-1000mx);
		}
	}
};

.declare-ruleset(@oue-div-ruleset, @oue-rules-wrapper);

/**     ····························································································
***      └> §5.4.1: News posts
**/

@import "news-posts.less";

.award-banner {
    margin-top: 1rem;
     margin-bottom: 1rem;
}

/**     ····························································································
***      └> §5.4.2: Banner slideshows
**/

@import "cycle-slideshows.less";

/**     ····························································································
***      └> §5.4.3: Columns
**/

@import "columns.less";

/**     ····························································································
***      └> §5.4.4: Flippable content panels
**/

@import "interactively-flipped-panels.less";

/**     ····························································································
***      └> §5.4.5: Page covering notices
**/

@import "page-covering-notices.less";

/**     ····························································································
***      └> §5.4.6: Recent updates
**/

@import "recent-updates.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §5.5: Main element
**/

@import "main.less";

/** ================================================================================================
*** §6: Text-level nodes
**/

/**   ----------------------------------------------------------------------------------------------
***   >>> §6.1: Hyperlink elements
**/

@import "hyperlinks.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §6.2: Strong elements
**/

strong.opening-line {
    font-size: 1.0625em;
    color: @hex-dark-green;
    .rgb-darkest-green(); text-shadow: 1px 1px 1px rgba(@rval, @gval, @bval, 0.3333);
}

strong.stands-out {
	.ff--condensed-2;
	font-size: 1.2em;
}

strong:not([class*="fw--"]) {
	font-weight: 600;
}

/**   ----------------------------------------------------------------------------------------------
***   >>> §6.3: Mark elements
**/

mark.highlight {
    background-color: transparent;
    font-style: normal;
    color: #AEC7CB;
}

/**   ----------------------------------------------------------------------------------------------
***   >>> §6.4: Span elements
**/

@import "spans.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §6.5: Cite elements
**/

cite.article-author {
    display: none;
}

/** ================================================================================================
*** §7: Embedded content nodes
**/

/**   ----------------------------------------------------------------------------------------------
***   >>> §7.1: Image elements
**/

@import "images.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §7.2: Iframe elements
**/

@import "iframes.less";

/** ================================================================================================
*** §8: Tabular data nodes
**/

@import "tables.less";

/** ================================================================================================
*** §9: Form nodes
**/

@import "forms.less";

/** ================================================================================================
*** §10: Scripted elements
**/

/**   ----------------------------------------------------------------------------------------------
***   >>> §10.1: Toggled drop-down panels
**/

@import "drop-down-toggles.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §10.2: Subtle panels
**/

.subtlePanel() {
    opacity: .3333;
    transition: opacity .3333s;
     -webkit-transition: opacity .3333s;
     -moz-transition: opacity .3333s;
     -o-transition: opacity .3333s;
    animation: subtlePanel-FadeOut 1.5s linear 0 1;
     -webkit-animation: subtlePanel-FadeOut 1.5s linear 0 1;
     -moz-animation: subtlePanel-FadeOut 1.5s linear 0 1;
     -o-animation: subtlePanel-FadeOut 1.5s linear 0 1;
    @-webkit-keyframes subtlePanel-FadeOut {
        0% {
            opacity: 1;
        }
        33% {
            opacity: 1;
        }
        100% {
            opacity: .3333;
        }
    }
    @keyframes subtlePanel-FadeOut {
        0% {
            opacity: 1;
        }
        33% {
            opacity: 1;
        }
        100% {
            opacity: .3333;
        }
    }
    &:hover {
        opacity: 1;
    }
}

/**   ----------------------------------------------------------------------------------------------
***   >>> §10.3: Flippable content panels
**/

.flipped-content-back {
    display: none;
    width: 100%;
}

/**   ----------------------------------------------------------------------------------------------
***   >>> §10.4: QTip driven tooltips
**/

@import "qtips.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §10.5: Quick-tabs panels
**/

@import "quick-tabs.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §10.6: Trive Events Calendars
**/

@import "events-calendar.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §10.7: Auto-scrolling image panels
**/

div.auto-scroller {
    position: relative;
    .inner-scroll-area {
        position: absolute;
         top: 0;
         right: 0;
         bottom: 0;
         left: 0;
        overflow: hidden;
    }
    ul {
        position: relative;
        padding: 0;
        margin: 0;
        li {
            position: absolute;
            padding: 0;
            margin: 0;
            list-style-type: none;
            list-style-image: none;
        }
    }
}

/** ================================================================================================
*** §11: Component-based CSS
**/

/**   ----------------------------------------------------------------------------------------------
***   >>> §11.1: Website notices
**/

@import "notices.less";

/**   ----------------------------------------------------------------------------------------------
***   >>> §11.2: Other components
**/

@import "components.less";

/** ================================================================================================
*** §12: Utility classes
**/

@import "utility-classes.less";
